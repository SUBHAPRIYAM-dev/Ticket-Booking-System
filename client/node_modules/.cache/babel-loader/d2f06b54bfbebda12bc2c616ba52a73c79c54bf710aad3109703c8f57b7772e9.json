{"ast":null,"code":"import axios from 'axios';\nconst API_URL = \"http://localhost:5000/api\"; // Replace with your backend URL\n\n// Create an Axios instance for easier configuration\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Helper function to set authorization token in headers\nconst setAuthHeader = token => {\n  api.defaults.headers['Authorization'] = `Bearer ${token}`;\n};\n\n// Register a new student\nexport const registerStudent = async (studentData, studentIdCardFile) => {\n  const formData = new FormData();\n  formData.append('name', studentData.name);\n  formData.append('rollNo', studentData.rollNo);\n  formData.append('branch', studentData.branch);\n  formData.append('email', studentData.email);\n  formData.append('phone', studentData.phone);\n  formData.append('studentIdCard', studentIdCardFile); // Image file\n\n  try {\n    const response = await api.post('/students/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data' // Handle file upload\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error registering student:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Get all students (For Admin)\nexport const getAllStudents = async token => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.get('/students');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Error fetching students:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// Get student by ID (For Admin)\nexport const getStudentById = async (studentId, token) => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.get(`/students/${studentId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error fetching student by ID:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// Approve a student (For Admin)\nexport const approveStudent = async (studentId, token) => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.put(`/students/approve/${studentId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Error approving student:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// Reject a student (For Admin)\nexport const rejectStudent = async (studentId, token) => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.put(`/students/reject/${studentId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"Error rejecting student:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\n\n// Verify QR code (For Admin)\nexport const verifyQRCode = async (qrCodeData, token) => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.post('/students/verify', {\n      qrCodeData\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error(\"Error verifying QR code:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\n\n// Generate QR Code for a student (For Admin)\nexport const generateStudentQR = async (studentId, token) => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.post(`/students/generateQR/${studentId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error(\"Error generating QR code:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};\n\n// Admin login (JWT token generation)\nexport const adminLogin = async (email, password) => {\n  try {\n    const response = await api.post('/admin/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    console.error(\"Error logging in admin:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n    throw error;\n  }\n};\n\n// Get admin data (For Admin)\nexport const getAdminData = async token => {\n  try {\n    setAuthHeader(token); // Set auth token in headers\n    const response = await api.get('/admin/data');\n    return response.data;\n  } catch (error) {\n    var _error$response9;\n    console.error(\"Error fetching admin data:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","setAuthHeader","token","defaults","registerStudent","studentData","studentIdCardFile","formData","FormData","append","name","rollNo","branch","email","phone","response","post","data","error","_error$response","console","message","getAllStudents","get","_error$response2","getStudentById","studentId","_error$response3","approveStudent","put","_error$response4","rejectStudent","_error$response5","verifyQRCode","qrCodeData","_error$response6","generateStudentQR","_error$response7","adminLogin","password","_error$response8","getAdminData","_error$response9"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = \"http://localhost:5000/api\"; // Replace with your backend URL\r\n\r\n// Create an Axios instance for easier configuration\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Helper function to set authorization token in headers\r\nconst setAuthHeader = (token) => {\r\n  api.defaults.headers['Authorization'] = `Bearer ${token}`;\r\n};\r\n\r\n// Register a new student\r\nexport const registerStudent = async (studentData, studentIdCardFile) => {\r\n  const formData = new FormData();\r\n  formData.append('name', studentData.name);\r\n  formData.append('rollNo', studentData.rollNo);\r\n  formData.append('branch', studentData.branch);\r\n  formData.append('email', studentData.email);\r\n  formData.append('phone', studentData.phone);\r\n  formData.append('studentIdCard', studentIdCardFile); // Image file\r\n\r\n  try {\r\n    const response = await api.post('/students/register', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data', // Handle file upload\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error registering student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all students (For Admin)\r\nexport const getAllStudents = async (token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.get('/students');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching students:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get student by ID (For Admin)\r\nexport const getStudentById = async (studentId, token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.get(`/students/${studentId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching student by ID:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Approve a student (For Admin)\r\nexport const approveStudent = async (studentId, token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.put(`/students/approve/${studentId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error approving student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Reject a student (For Admin)\r\nexport const rejectStudent = async (studentId, token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.put(`/students/reject/${studentId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error rejecting student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Verify QR code (For Admin)\r\nexport const verifyQRCode = async (qrCodeData, token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.post('/students/verify', { qrCodeData });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error verifying QR code:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Generate QR Code for a student (For Admin)\r\nexport const generateStudentQR = async (studentId, token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.post(`/students/generateQR/${studentId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error generating QR code:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Admin login (JWT token generation)\r\nexport const adminLogin = async (email, password) => {\r\n  try {\r\n    const response = await api.post('/admin/login', { email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error logging in admin:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get admin data (For Admin)\r\nexport const getAdminData = async (token) => {\r\n  try {\r\n    setAuthHeader(token); // Set auth token in headers\r\n    const response = await api.get('/admin/data');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching admin data:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/BL,GAAG,CAACM,QAAQ,CAACH,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUE,KAAK,EAAE;AAC3D,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAOC,WAAW,EAAEC,iBAAiB,KAAK;EACvE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,WAAW,CAACK,IAAI,CAAC;EACzCH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,WAAW,CAACM,MAAM,CAAC;EAC7CJ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,WAAW,CAACO,MAAM,CAAC;EAC7CL,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,WAAW,CAACQ,KAAK,CAAC;EAC3CN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,WAAW,CAACS,KAAK,CAAC;EAC3CP,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEH,iBAAiB,CAAC,CAAC,CAAC;;EAErD,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,oBAAoB,EAAET,QAAQ,EAAE;MAC9DP,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB,CAAE;MACzC;IACF,CAAC,CAAC;IACF,OAAOe,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAClF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAOpB,KAAK,IAAK;EAC7C,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA;IACdJ,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAE,EAAAM,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAChF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,cAAc,GAAG,MAAAA,CAAOC,SAAS,EAAExB,KAAK,KAAK;EACxD,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,GAAG,CAAC,aAAaG,SAAS,EAAE,CAAC;IACxD,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACdP,OAAO,CAACF,KAAK,CAAC,+BAA+B,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACrF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,cAAc,GAAG,MAAAA,CAAOF,SAAS,EAAExB,KAAK,KAAK;EACxD,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAACgC,GAAG,CAAC,qBAAqBH,SAAS,EAAE,CAAC;IAChE,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAY,gBAAA;IACdV,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAE,EAAAY,gBAAA,GAAAZ,KAAK,CAACH,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAChF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,aAAa,GAAG,MAAAA,CAAOL,SAAS,EAAExB,KAAK,KAAK;EACvD,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAACgC,GAAG,CAAC,oBAAoBH,SAAS,EAAE,CAAC;IAC/D,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAc,gBAAA;IACdZ,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAE,EAAAc,gBAAA,GAAAd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBf,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAChF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,YAAY,GAAG,MAAAA,CAAOC,UAAU,EAAEhC,KAAK,KAAK;EACvD,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,kBAAkB,EAAE;MAAEkB;IAAW,CAAC,CAAC;IACnE,OAAOnB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAiB,gBAAA;IACdf,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAE,EAAAiB,gBAAA,GAAAjB,KAAK,CAACH,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBlB,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAChF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,iBAAiB,GAAG,MAAAA,CAAOV,SAAS,EAAExB,KAAK,KAAK;EAC3D,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,wBAAwBU,SAAS,EAAE,CAAC;IACpE,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAmB,gBAAA;IACdjB,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAmB,gBAAA,GAAAnB,KAAK,CAACH,QAAQ,cAAAsB,gBAAA,uBAAdA,gBAAA,CAAgBpB,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACjF,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMoB,UAAU,GAAG,MAAAA,CAAOzB,KAAK,EAAE0B,QAAQ,KAAK;EACnD,IAAI;IACF,MAAMxB,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAE;MAAEH,KAAK;MAAE0B;IAAS,CAAC,CAAC;IACpE,OAAOxB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAsB,gBAAA;IACdpB,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAE,EAAAsB,gBAAA,GAAAtB,KAAK,CAACH,QAAQ,cAAAyB,gBAAA,uBAAdA,gBAAA,CAAgBvB,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAC/E,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMuB,YAAY,GAAG,MAAOvC,KAAK,IAAK;EAC3C,IAAI;IACFD,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAwB,gBAAA;IACdtB,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAE,EAAAwB,gBAAA,GAAAxB,KAAK,CAACH,QAAQ,cAAA2B,gBAAA,uBAAdA,gBAAA,CAAgBzB,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAClF,MAAMH,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}