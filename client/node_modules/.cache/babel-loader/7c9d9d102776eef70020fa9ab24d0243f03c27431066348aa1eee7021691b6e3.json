{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API requests\nconst API_URL = 'http://localhost:5000'; // Adjust based on your backend URL\n\n// Function to handle admin login\nexport const loginAdmin = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/admin-login`, {\n      email,\n      password\n    });\n    return response.data; // Return data from the backend\n  } catch (error) {\n    console.error('Error logging in admin:', error);\n    throw error; // Rethrow error to be handled by frontend code\n  }\n};\n\n// Function to register a new student\nexport const registerStudent = async studentData => {\n  try {\n    const response = await axios.post(`${API_URL}/register-student`, studentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering student:', error);\n    throw error;\n  }\n};\n\n// Function to get all students\nexport const getAllStudents = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/get-all-students`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching students:', error);\n    throw error;\n  }\n};\n\n// Function to get a single student by ID\nexport const getStudentById = async studentId => {\n  try {\n    const response = await axios.get(`${API_URL}/get-student/${studentId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching student by ID:', error);\n    throw error;\n  }\n};\n\n// Function to approve a student\nexport const approveStudent = async studentId => {\n  try {\n    const response = await axios.post(`${API_URL}/approve-student`, {\n      studentId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error approving student:', error);\n    throw error;\n  }\n};\n\n// Function to reject a student\nexport const rejectStudent = async studentId => {\n  try {\n    const response = await axios.post(`${API_URL}/reject-student`, {\n      studentId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error rejecting student:', error);\n    throw error;\n  }\n};\n\n// Function to generate a QR Code for a student\nexport const generateStudentQR = async studentId => {\n  try {\n    const response = await axios.post(`${API_URL}/generate-student-qr`, {\n      studentId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating QR code for student:', error);\n    throw error;\n  }\n};\n\n// Function to verify QR Code\nexport const verifyQRCode = async qrCode => {\n  try {\n    const response = await axios.post(`${API_URL}/verify-qr-code`, {\n      rollNo: qrCode // Send the roll number from the QR code\n    });\n    return response.data; // Return the response from the backend\n  } catch (error) {\n    console.error('Error verifying QR code:', error);\n    throw error;\n  }\n};\n\n// Function to fetch admin data (if needed)\nexport const getAdminData = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/admin-data`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching admin data:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","loginAdmin","email","password","response","post","data","error","console","registerStudent","studentData","getAllStudents","get","getStudentById","studentId","approveStudent","rejectStudent","generateStudentQR","verifyQRCode","qrCode","rollNo","getAdminData"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for API requests\r\nconst API_URL = 'http://localhost:5000'; // Adjust based on your backend URL\r\n\r\n// Function to handle admin login\r\nexport const loginAdmin = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/admin-login`, {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data; // Return data from the backend\r\n  } catch (error) {\r\n    console.error('Error logging in admin:', error);\r\n    throw error; // Rethrow error to be handled by frontend code\r\n  }\r\n};\r\n\r\n// Function to register a new student\r\nexport const registerStudent = async (studentData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/register-student`, studentData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error registering student:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to get all students\r\nexport const getAllStudents = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/get-all-students`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching students:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to get a single student by ID\r\nexport const getStudentById = async (studentId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/get-student/${studentId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching student by ID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to approve a student\r\nexport const approveStudent = async (studentId) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/approve-student`, {\r\n      studentId,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error approving student:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to reject a student\r\nexport const rejectStudent = async (studentId) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/reject-student`, {\r\n      studentId,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error rejecting student:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to generate a QR Code for a student\r\nexport const generateStudentQR = async (studentId) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/generate-student-qr`, {\r\n      studentId,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error generating QR code for student:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to verify QR Code\r\nexport const verifyQRCode = async (qrCode) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/verify-qr-code`, {\r\n      rollNo: qrCode, // Send the roll number from the QR code\r\n    });\r\n    return response.data; // Return the response from the backend\r\n  } catch (error) {\r\n    console.error('Error verifying QR code:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to fetch admin data (if needed)\r\nexport const getAdminData = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/admin-data`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching admin data:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}