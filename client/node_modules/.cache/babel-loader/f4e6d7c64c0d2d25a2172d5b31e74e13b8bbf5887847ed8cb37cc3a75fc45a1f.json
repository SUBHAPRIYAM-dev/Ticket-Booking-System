{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { BrowserMultiFormatReader } from \"@zxing/browser\"; // Updated to use @zxing/browser\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [error, setError] = useState(\"\"); // Error message state\n  const [success, setSuccess] = useState(\"\"); // Success message state\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true); // Control scanning state\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // Handle front/back camera\n  const navigate = useNavigate();\n\n  // Use Ref to hold video element\n  const videoRef = useRef(null);\n  const codeReaderRef = useRef(null); // Store ZXing instance\n\n  // Start the camera and QR scanner\n  const startCamera = async facingMode => {\n    try {\n      var _cameras$, _cameras$2, _cameras$3;\n      // Ensure the previous scanner instance is stopped before starting a new one\n      if (codeReaderRef.current) {\n        codeReaderRef.current.reset();\n      }\n\n      // Create a new scanner instance\n      codeReaderRef.current = new BrowserMultiFormatReader();\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const cameras = devices.filter(device => device.kind === \"videoinput\");\n\n      // Pick the correct camera\n      const cameraId = facingMode === \"user\" ? (_cameras$ = cameras[0]) === null || _cameras$ === void 0 ? void 0 : _cameras$.deviceId : ((_cameras$2 = cameras[1]) === null || _cameras$2 === void 0 ? void 0 : _cameras$2.deviceId) || ((_cameras$3 = cameras[0]) === null || _cameras$3 === void 0 ? void 0 : _cameras$3.deviceId);\n      if (!cameraId) {\n        setError(\"No camera found. Please connect a camera.\");\n        return;\n      }\n\n      // Start scanning with the selected camera\n      await codeReaderRef.current.decodeFromVideoDevice(cameraId, videoRef.current, (result, err) => {\n        if (result && isScanningEnabled) {\n          handleScan(result.getText());\n        }\n        if (err) {\n          setError(err.message);\n        }\n      });\n      setError(\"\"); // Clear errors if camera starts successfully\n    } catch (err) {\n      console.error(\"❌ Camera Access Error:\", err);\n      if (err.name === \"NotAllowedError\") {\n        setError(\"Camera access is blocked. Please allow camera permissions.\");\n      } else if (err.name === \"NotFoundError\") {\n        setError(\"No camera found. Please connect a camera.\");\n      } else {\n        setError(\"Unable to access camera. Please check your settings.\");\n      }\n    }\n  };\n\n  // Switch the camera between front and back\n  const toggleCamera = () => {\n    setIsFrontCamera(prev => !prev);\n  };\n\n  // Start camera on component mount\n  useEffect(() => {\n    startCamera(isFrontCamera ? \"user\" : \"environment\");\n    return () => {\n      var _videoRef$current;\n      // Stop the camera stream when unmounting\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        stream.getTracks().forEach(track => track.stop());\n      }\n      if (codeReaderRef.current) {\n        codeReaderRef.current.reset();\n      }\n    };\n  }, [isFrontCamera]);\n\n  // Handle QR code scan result\n  const handleScan = data => {\n    if (data && isScanningEnabled) {\n      setScannedData(data);\n      setError(\"\");\n      setSuccess(\"\");\n      setIsScanningEnabled(false);\n      checkTicket(data);\n    }\n  };\n\n  // Verify the scanned roll number with backend\n  const checkTicket = async qrData => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/verify-qrcode\", {\n        qrData\n      });\n      if (response.status === 200 && response.data.status === \"success\") {\n        setSuccess(\"Successfully scanned! The QR code is valid.\");\n      } else if (response.data.status === \"duplicate\") {\n        setError(\"Duplicate ticket detected. This QR has already been scanned.\");\n      } else {\n        setError(\"Ticket is invalid or not found.\");\n      }\n    } catch (err) {\n      setError(\"Failed to verify the ticket. Please try again.\");\n    }\n  };\n\n  // Reset the scanner for the next scan\n  const resetScanner = () => {\n    setScannedData(null);\n    setIsScanningEnabled(true);\n  };\n  const handleBack = () => {\n    navigate(\"/admin/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-6\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          width: \"100%\",\n          height: \"auto\",\n          style: {\n            borderRadius: \"8px\",\n            border: \"2px solid #ddd\",\n            maxHeight: \"400px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-4\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetScanner,\n        className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\",\n        children: \"Next Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCamera,\n        className: \"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-4\",\n        children: \"Switch Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"8ogubObS9vBE+HoATJSd9o1pr5U=\", false, function () {\n  return [useNavigate];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","BrowserMultiFormatReader","jsxDEV","_jsxDEV","QRScanner","_s","error","setError","success","setSuccess","scannedData","setScannedData","isScanningEnabled","setIsScanningEnabled","isFrontCamera","setIsFrontCamera","navigate","videoRef","codeReaderRef","startCamera","facingMode","_cameras$","_cameras$2","_cameras$3","current","reset","devices","navigator","mediaDevices","enumerateDevices","cameras","filter","device","kind","cameraId","deviceId","decodeFromVideoDevice","result","err","handleScan","getText","message","console","name","toggleCamera","prev","_videoRef$current","srcObject","stream","getTracks","forEach","track","stop","data","checkTicket","qrData","response","post","status","resetScanner","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","width","height","style","borderRadius","border","maxHeight","onClick","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/browser\"; // Updated to use @zxing/browser\r\n\r\nconst QRScanner = () => {\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n  const [success, setSuccess] = useState(\"\"); // Success message state\r\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\r\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true); // Control scanning state\r\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // Handle front/back camera\r\n  const navigate = useNavigate();\r\n\r\n  // Use Ref to hold video element\r\n  const videoRef = useRef(null);\r\n  const codeReaderRef = useRef(null); // Store ZXing instance\r\n\r\n  // Start the camera and QR scanner\r\n  const startCamera = async (facingMode) => {\r\n    try {\r\n      // Ensure the previous scanner instance is stopped before starting a new one\r\n      if (codeReaderRef.current) {\r\n        codeReaderRef.current.reset();\r\n      }\r\n\r\n      // Create a new scanner instance\r\n      codeReaderRef.current = new BrowserMultiFormatReader();\r\n\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const cameras = devices.filter((device) => device.kind === \"videoinput\");\r\n\r\n      // Pick the correct camera\r\n      const cameraId = facingMode === \"user\" ? cameras[0]?.deviceId : cameras[1]?.deviceId || cameras[0]?.deviceId;\r\n\r\n      if (!cameraId) {\r\n        setError(\"No camera found. Please connect a camera.\");\r\n        return;\r\n      }\r\n\r\n      // Start scanning with the selected camera\r\n      await codeReaderRef.current.decodeFromVideoDevice(cameraId, videoRef.current, (result, err) => {\r\n        if (result && isScanningEnabled) {\r\n          handleScan(result.getText());\r\n        }\r\n        if (err) {\r\n          setError(err.message);\r\n        }\r\n      });\r\n\r\n      setError(\"\"); // Clear errors if camera starts successfully\r\n    } catch (err) {\r\n      console.error(\"❌ Camera Access Error:\", err);\r\n      if (err.name === \"NotAllowedError\") {\r\n        setError(\"Camera access is blocked. Please allow camera permissions.\");\r\n      } else if (err.name === \"NotFoundError\") {\r\n        setError(\"No camera found. Please connect a camera.\");\r\n      } else {\r\n        setError(\"Unable to access camera. Please check your settings.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Switch the camera between front and back\r\n  const toggleCamera = () => {\r\n    setIsFrontCamera((prev) => !prev);\r\n  };\r\n\r\n  // Start camera on component mount\r\n  useEffect(() => {\r\n    startCamera(isFrontCamera ? \"user\" : \"environment\");\r\n\r\n    return () => {\r\n      // Stop the camera stream when unmounting\r\n      if (videoRef.current?.srcObject) {\r\n        const stream = videoRef.current.srcObject;\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (codeReaderRef.current) {\r\n        codeReaderRef.current.reset();\r\n      }\r\n    };\r\n  }, [isFrontCamera]);\r\n\r\n  // Handle QR code scan result\r\n  const handleScan = (data) => {\r\n    if (data && isScanningEnabled) {\r\n      setScannedData(data);\r\n      setError(\"\");\r\n      setSuccess(\"\");\r\n      setIsScanningEnabled(false);\r\n      checkTicket(data);\r\n    }\r\n  };\r\n\r\n  // Verify the scanned roll number with backend\r\n  const checkTicket = async (qrData) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/verify-qrcode\", { qrData });\r\n\r\n      if (response.status === 200 && response.data.status === \"success\") {\r\n        setSuccess(\"Successfully scanned! The QR code is valid.\");\r\n      } else if (response.data.status === \"duplicate\") {\r\n        setError(\"Duplicate ticket detected. This QR has already been scanned.\");\r\n      } else {\r\n        setError(\"Ticket is invalid or not found.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to verify the ticket. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Reset the scanner for the next scan\r\n  const resetScanner = () => {\r\n    setScannedData(null);\r\n    setIsScanningEnabled(true);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/admin/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n          QR Code Scanner\r\n        </h2>\r\n\r\n        {/* Camera Feed (Video Element) */}\r\n        <div className=\"relative mb-4\">\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              border: \"2px solid #ddd\",\r\n              maxHeight: \"400px\",\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* Error or Success Message */}\r\n        {error && <p className=\"text-red-500 text-center mb-4\">{error}</p>}\r\n        {success && <p className=\"text-green-500 text-center mb-4\">{success}</p>}\r\n\r\n        {/* Submit Button - Appears after QR Code is Scanned */}\r\n        {success && (\r\n          <button\r\n            onClick={resetScanner}\r\n            className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n          >\r\n            Next Scan\r\n          </button>\r\n        )}\r\n\r\n        {/* Back Button */}\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\"\r\n        >\r\n          Back to Dashboard\r\n        </button>\r\n\r\n        {/* Switch Camera Button */}\r\n        <button\r\n          onClick={toggleCamera}\r\n          className=\"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-4\"\r\n        >\r\n          Switch Camera\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}