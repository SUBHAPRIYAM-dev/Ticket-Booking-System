{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\n\n// ‚úÖ Attach Authorization Token to Every Request (Except Login)\nAPI.interceptors.request.use(config => {\n  if (config.url !== \"/admin/login\") {\n    const token = localStorage.getItem(\"adminToken\"); // Get token from localStorage\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token if available\n    } else {\n      console.warn(\"‚ö†Ô∏è No admin token found! API request may fail.\");\n    }\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// ‚úÖ Admin Login\nexport const loginAdmin = async data => {\n  try {\n    console.log(\"üîπ Sending login request with data:\", data);\n    const response = await API.post(\"/admin/login\", data);\n    console.log(\"‚úÖ Login API response:\", response.data);\n    if (!response.data || !response.data.token) {\n      throw new Error(\"Invalid response structure from server\");\n    }\n    localStorage.setItem(\"adminToken\", response.data.token); // Store token in localStorage\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"‚ùå Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Fetch Students for Admin\nexport const getStudents = async () => {\n  try {\n    console.log(\"üîπ Fetching students for admin...\");\n\n    // Ensure admin is authenticated\n    const token = localStorage.getItem(\"adminToken\");\n    if (!token) {\n      throw new Error(\"Admin not authenticated. Please log in.\");\n    }\n    const response = await API.get(\"/admin/students\"); // ‚úÖ Ensure correct admin route\n    console.log(\"‚úÖ Students API response:\", response.data);\n    if (!Array.isArray(response.data)) {\n      throw new Error(\"Invalid response format: Expected an array\");\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response3;\n    console.error(\"‚ùå Error fetching students:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n    // HTTP Status Code\n    ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message // Server response or generic error\n    );\n    throw error;\n  }\n};\n\n// ‚úÖ Register a Student (Ensures multipart/form-data handling)\nexport const registerStudent = async data => {\n  try {\n    const response = await API.post(\"/students/register\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"‚ùå Error registering student:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Approve a Student\nexport const approveStudent = async id => {\n  try {\n    const response = await API.put(`/admin/approve/${id}`);\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"‚ùå Error approving student:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Reject a Student\nexport const rejectStudent = async id => {\n  try {\n    const response = await API.put(`/admin/reject/${id}`);\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error(\"‚ùå Error rejecting student:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Verify QR Code\nexport const verifyQRCode = async (qrData, rollNo) => {\n  try {\n    const response = await API.post(\"/verify-qrcode\", {\n      qrData,\n      rollNo\n    });\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error(\"‚ùå Error verifying QR code:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","url","token","localStorage","getItem","headers","console","warn","error","Promise","reject","loginAdmin","data","log","response","post","Error","setItem","_error$response","message","getStudents","get","Array","isArray","_error$response2","_error$response3","status","registerStudent","_error$response4","approveStudent","id","put","_error$response5","rejectStudent","_error$response6","verifyQRCode","qrData","rollNo","_error$response7"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000/api\" });\r\n\r\n// ‚úÖ Attach Authorization Token to Every Request (Except Login)\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    if (config.url !== \"/admin/login\") {\r\n      const token = localStorage.getItem(\"adminToken\"); // Get token from localStorage\r\n      if (token) {\r\n        config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token if available\r\n      } else {\r\n        console.warn(\"‚ö†Ô∏è No admin token found! API request may fail.\");\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// ‚úÖ Admin Login\r\nexport const loginAdmin = async (data) => {\r\n  try {\r\n    console.log(\"üîπ Sending login request with data:\", data);\r\n    const response = await API.post(\"/admin/login\", data);\r\n    console.log(\"‚úÖ Login API response:\", response.data);\r\n\r\n    if (!response.data || !response.data.token) {\r\n      throw new Error(\"Invalid response structure from server\");\r\n    }\r\n\r\n    localStorage.setItem(\"adminToken\", response.data.token); // Store token in localStorage\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Fetch Students for Admin\r\nexport const getStudents = async () => {\r\n  try {\r\n    console.log(\"üîπ Fetching students for admin...\");\r\n    \r\n    // Ensure admin is authenticated\r\n    const token = localStorage.getItem(\"adminToken\");\r\n    if (!token) {\r\n      throw new Error(\"Admin not authenticated. Please log in.\");\r\n    }\r\n\r\n    const response = await API.get(\"/admin/students\"); // ‚úÖ Ensure correct admin route\r\n    console.log(\"‚úÖ Students API response:\", response.data);\r\n\r\n    if (!Array.isArray(response.data)) {\r\n      throw new Error(\"Invalid response format: Expected an array\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      \"‚ùå Error fetching students:\",\r\n      error.response?.status, // HTTP Status Code\r\n      error.response?.data || error.message // Server response or generic error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Register a Student (Ensures multipart/form-data handling)\r\nexport const registerStudent = async (data) => {\r\n  try {\r\n    const response = await API.post(\"/students/register\", data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error registering student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Approve a Student\r\nexport const approveStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/approve/${id}`);\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error approving student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Reject a Student\r\nexport const rejectStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/reject/${id}`);\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error rejecting student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Verify QR Code\r\nexport const verifyQRCode = async (qrData, rollNo) => {\r\n  try {\r\n    const response = await API.post(\"/verify-qrcode\", { qrData, rollNo });\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error verifying QR code:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAA4B,CAAC,CAAC;;AAElE;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,IAAIA,MAAM,CAACC,GAAG,KAAK,cAAc,EAAE;IACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;IAClD,IAAIF,KAAK,EAAE;MACTF,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;IACvD,CAAC,MAAM;MACLI,OAAO,CAACC,IAAI,CAAC,gDAAgD,CAAC;IAChE;EACF;EACA,OAAOP,MAAM;AACf,CAAC,EACAQ,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACFN,OAAO,CAACO,GAAG,CAAC,qCAAqC,EAAED,IAAI,CAAC;IACxD,MAAME,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,cAAc,EAAEH,IAAI,CAAC;IACrDN,OAAO,CAACO,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACF,IAAI,CAAC;IAEnD,IAAI,CAACE,QAAQ,CAACF,IAAI,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACV,KAAK,EAAE;MAC1C,MAAM,IAAIc,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEAb,YAAY,CAACc,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAACF,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC;IACzD,OAAOY,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAU,eAAA;IACdZ,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAE,EAAAU,eAAA,GAAAV,KAAK,CAACM,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBN,IAAI,KAAIJ,KAAK,CAACW,OAAO,CAAC;IACtE,MAAMX,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACFd,OAAO,CAACO,GAAG,CAAC,mCAAmC,CAAC;;IAEhD;IACA,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIc,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,MAAMF,QAAQ,GAAG,MAAMpB,GAAG,CAAC2B,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACnDf,OAAO,CAACO,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAACF,IAAI,CAAC;IAEtD,IAAI,CAACU,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACF,IAAI,CAAC,EAAE;MACjC,MAAM,IAAII,KAAK,CAAC,4CAA4C,CAAC;IAC/D;IAEA,OAAOF,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAgB,gBAAA,EAAAC,gBAAA;IACdnB,OAAO,CAACE,KAAK,CACX,4BAA4B,GAAAgB,gBAAA,GAC5BhB,KAAK,CAACM,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM;IAAE;IACxB,EAAAD,gBAAA,GAAAjB,KAAK,CAACM,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAIJ,KAAK,CAACW,OAAO,CAAC;IACxC,CAAC;IACD,MAAMX,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,eAAe,GAAG,MAAOf,IAAI,IAAK;EAC7C,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,oBAAoB,EAAEH,IAAI,EAAE;MAC1DP,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAI,CAACS,QAAQ,CAACF,IAAI,EAAE,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;IACnE,OAAOF,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAoB,gBAAA;IACdtB,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAE,EAAAoB,gBAAA,GAAApB,KAAK,CAACM,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIJ,KAAK,CAACW,OAAO,CAAC;IACpF,MAAMX,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMqB,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMpB,GAAG,CAACqC,GAAG,CAAC,kBAAkBD,EAAE,EAAE,CAAC;IACtD,IAAI,CAAChB,QAAQ,CAACF,IAAI,EAAE,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;IACnE,OAAOF,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAwB,gBAAA;IACd1B,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAE,EAAAwB,gBAAA,GAAAxB,KAAK,CAACM,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBpB,IAAI,KAAIJ,KAAK,CAACW,OAAO,CAAC;IAClF,MAAMX,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMyB,aAAa,GAAG,MAAOH,EAAE,IAAK;EACzC,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMpB,GAAG,CAACqC,GAAG,CAAC,iBAAiBD,EAAE,EAAE,CAAC;IACrD,IAAI,CAAChB,QAAQ,CAACF,IAAI,EAAE,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;IACnE,OAAOF,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAA0B,gBAAA;IACd5B,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAE,EAAA0B,gBAAA,GAAA1B,KAAK,CAACM,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBtB,IAAI,KAAIJ,KAAK,CAACW,OAAO,CAAC;IAClF,MAAMX,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAM2B,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EACpD,IAAI;IACF,MAAMvB,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,gBAAgB,EAAE;MAAEqB,MAAM;MAAEC;IAAO,CAAC,CAAC;IACrE,IAAI,CAACvB,QAAQ,CAACF,IAAI,EAAE,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;IACnE,OAAOF,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAA8B,gBAAA;IACdhC,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAE,EAAA8B,gBAAA,GAAA9B,KAAK,CAACM,QAAQ,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgB1B,IAAI,KAAIJ,KAAK,CAACW,OAAO,CAAC;IAClF,MAAMX,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}