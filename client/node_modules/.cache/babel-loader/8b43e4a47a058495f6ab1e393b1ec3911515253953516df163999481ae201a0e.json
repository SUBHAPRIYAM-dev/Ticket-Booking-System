{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // For navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [result, setResult] = useState(null); // To store the result of the QR scan\n  const [loading, setLoading] = useState(false); // To show a loading state\n  const [errorMessage, setErrorMessage] = useState(\"\"); // To show error messages\n  const [successMessage, setSuccessMessage] = useState(\"\"); // To show success message\n  const [scanning, setScanning] = useState(false); // Whether QR code scanning is active\n\n  const navigate = useNavigate(); // For navigation back to the dashboard\n\n  // Handle successful scan\n  const handleScan = async data => {\n    if (data && data !== result) {\n      setResult(data); // Update the result state with the scanned QR code\n      setLoading(true);\n      setErrorMessage(\"\");\n      setSuccessMessage(\"\");\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/verify-ticket\", {\n          rollNo: data\n        });\n        setLoading(false);\n        if (response.data.success) {\n          setSuccessMessage(response.data.message);\n        } else {\n          setErrorMessage(\"Invalid Ticket! Please try again.\");\n        }\n      } catch (error) {\n        setLoading(false);\n        setErrorMessage(\"Error communicating with the server. Please try again.\");\n      }\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n    setErrorMessage(\"Error scanning QR code. Please check your camera.\");\n  };\n\n  // Handle \"Go Back\" action\n  const handleGoBack = () => {\n    navigate(\"/admin/dashboard\"); // Navigate back to the admin dashboard\n  };\n\n  // Handle start scanning manually\n  const handleStartScan = () => {\n    setScanning(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-blue-600 mb-4\",\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [!scanning && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-lg mb-2\",\n        onClick: handleStartScan,\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-gray-600 text-white rounded-lg\",\n        onClick: handleGoBack,\n        children: \"Go Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), scanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onScan: handleScan,\n        onError: handleError,\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          borderRadius: \"8px\",\n          border: \"2px solid #ddd\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-0 right-0 bottom-0 bg-black opacity-50 flex items-center justify-center text-white text-xl rounded-lg\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), result && !loading && !errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-green-600 font-bold\",\n      children: [\"Scanned Roll No: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-green-600 font-bold\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-red-600 font-bold\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"phsBIepPR03/nF3i/TlJXkfCKMk=\", false, function () {\n  return [useNavigate];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","QrReader","axios","useNavigate","jsxDEV","_jsxDEV","QRScanner","_s","result","setResult","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","scanning","setScanning","navigate","handleScan","data","response","post","rollNo","success","message","error","handleError","err","console","handleGoBack","handleStartScan","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","delay","onScan","onError","style","width","height","borderRadius","border","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { QrReader } from \"react-qr-reader\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // For navigation\r\n\r\nconst QRScanner = () => {\r\n  const [result, setResult] = useState(null); // To store the result of the QR scan\r\n  const [loading, setLoading] = useState(false); // To show a loading state\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // To show error messages\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // To show success message\r\n  const [scanning, setScanning] = useState(false); // Whether QR code scanning is active\r\n\r\n  const navigate = useNavigate(); // For navigation back to the dashboard\r\n\r\n  // Handle successful scan\r\n  const handleScan = async (data) => {\r\n    if (data && data !== result) {\r\n      setResult(data); // Update the result state with the scanned QR code\r\n      setLoading(true);\r\n      setErrorMessage(\"\");\r\n      setSuccessMessage(\"\");\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/verify-ticket\", { rollNo: data });\r\n        setLoading(false);\r\n        if (response.data.success) {\r\n          setSuccessMessage(response.data.message);\r\n        } else {\r\n          setErrorMessage(\"Invalid Ticket! Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setErrorMessage(\"Error communicating with the server. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n    setErrorMessage(\"Error scanning QR code. Please check your camera.\");\r\n  };\r\n\r\n  // Handle \"Go Back\" action\r\n  const handleGoBack = () => {\r\n    navigate(\"/admin/dashboard\"); // Navigate back to the admin dashboard\r\n  };\r\n\r\n  // Handle start scanning manually\r\n  const handleStartScan = () => {\r\n    setScanning(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg text-center\">\r\n      <h2 className=\"text-2xl font-bold text-blue-600 mb-4\">QR Code Scanner</h2>\r\n\r\n      {/* Buttons for scanning and going back */}\r\n      <div className=\"mb-4\">\r\n        {!scanning && (\r\n          <button\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg mb-2\"\r\n            onClick={handleStartScan}\r\n          >\r\n            Start Scanning\r\n          </button>\r\n        )}\r\n        <button\r\n          className=\"px-4 py-2 bg-gray-600 text-white rounded-lg\"\r\n          onClick={handleGoBack}\r\n        >\r\n          Go Back to Dashboard\r\n        </button>\r\n      </div>\r\n\r\n      {/* QR Reader Component */}\r\n      {scanning && (\r\n        <div className=\"relative mb-4\">\r\n          <QrReader\r\n            delay={300}\r\n            onScan={handleScan}\r\n            onError={handleError}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"auto\",\r\n              borderRadius: \"8px\",\r\n              border: \"2px solid #ddd\",\r\n            }}\r\n          />\r\n          {loading && (\r\n            <div className=\"absolute top-0 left-0 right-0 bottom-0 bg-black opacity-50 flex items-center justify-center text-white text-xl rounded-lg\">\r\n              Loading...\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Scanned Result Display */}\r\n      {result && !loading && !errorMessage && (\r\n        <p className=\"mt-4 text-green-600 font-bold\">Scanned Roll No: {result}</p>\r\n      )}\r\n\r\n      {/* Success Message Display */}\r\n      {successMessage && (\r\n        <p className=\"mt-4 text-green-600 font-bold\">{successMessage}</p>\r\n      )}\r\n\r\n      {/* Error Message Display */}\r\n      {errorMessage && (\r\n        <p className=\"mt-4 text-red-600 font-bold\">{errorMessage}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}