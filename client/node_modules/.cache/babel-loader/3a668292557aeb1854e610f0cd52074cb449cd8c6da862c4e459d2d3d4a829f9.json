{"ast":null,"code":"import axios from \"axios\";\n\n// Create an instance of axios with the base URL\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\n\n// Add an interceptor to include the Authorization token in every request if it's available\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"adminToken\"); // Get the token from localStorage\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token to headers if available\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Login Admin\nexport const loginAdmin = data => API.post(\"/admin/login\", data);\n\n// Get List of Students\nexport const getStudents = () => API.get(\"/students\");\n\n// Register a Student\nexport const registerStudent = data => API.post(\"/students/register\", data);\n\n// Approve a Student\nexport const approveStudent = async id => {\n  try {\n    const response = await API.put(`/admin/approve/${id}`);\n    return response.data; // Return the response if successful\n  } catch (error) {\n    console.error(\"Error approving student:\", error);\n    throw error; // Propagate error for further handling\n  }\n};\n\n// Reject a Student\nexport const rejectStudent = async id => {\n  try {\n    const response = await API.put(`/admin/reject/${id}`);\n    return response.data; // Return the response if successful\n  } catch (error) {\n    console.error(\"Error rejecting student:\", error);\n    throw error; // Propagate error for further handling\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","loginAdmin","data","post","getStudents","get","registerStudent","approveStudent","id","response","put","console","rejectStudent"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an instance of axios with the base URL\r\nconst API = axios.create({ baseURL: \"http://localhost:5000/api\" });\r\n\r\n// Add an interceptor to include the Authorization token in every request if it's available\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"adminToken\"); // Get the token from localStorage\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token to headers if available\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Login Admin\r\nexport const loginAdmin = (data) => API.post(\"/admin/login\", data);\r\n\r\n// Get List of Students\r\nexport const getStudents = () => API.get(\"/students\");\r\n\r\n// Register a Student\r\nexport const registerStudent = (data) => API.post(\"/students/register\", data);\r\n\r\n// Approve a Student\r\nexport const approveStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/approve/${id}`);\r\n    return response.data; // Return the response if successful\r\n  } catch (error) {\r\n    console.error(\"Error approving student:\", error);\r\n    throw error; // Propagate error for further handling\r\n  }\r\n};\r\n\r\n// Reject a Student\r\nexport const rejectStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/reject/${id}`);\r\n    return response.data; // Return the response if successful\r\n  } catch (error) {\r\n    console.error(\"Error rejecting student:\", error);\r\n    throw error; // Propagate error for further handling\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAA4B,CAAC,CAAC;;AAElE;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAIC,IAAI,IAAKf,GAAG,CAACgB,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;;AAElE;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;;AAErD;AACA,OAAO,MAAMC,eAAe,GAAIJ,IAAI,IAAKf,GAAG,CAACgB,IAAI,CAAC,oBAAoB,EAAED,IAAI,CAAC;;AAE7E;AACA,OAAO,MAAMK,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,GAAG,CAAC,kBAAkBF,EAAE,EAAE,CAAC;IACtD,OAAOC,QAAQ,CAACP,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACda,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMc,aAAa,GAAG,MAAOJ,EAAE,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,GAAG,CAAC,iBAAiBF,EAAE,EAAE,CAAC;IACrD,OAAOC,QAAQ,CAACP,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACda,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}