{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { QrReader } from \"react-qr-reader\"; // Correct import for QR reader\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [error, setError] = useState(\"\"); // Error message state\n  const [success, setSuccess] = useState(\"\"); // Success message state\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true); // Control scanning state\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // Handle front/back camera\n  const navigate = useNavigate();\n\n  // Handle QR code scan result\n  const handleScan = data => {\n    console.log(\"QR Scan Result:\", data); // Debugging: Log the scanned data\n    if (data && isScanningEnabled) {\n      setScannedData(data); // Store scanned data (roll number) in state\n      setError(\"\"); // Clear previous error messages\n      setSuccess(\"\"); // Clear previous success messages\n      setIsScanningEnabled(false); // Disable further scanning while processing\n      checkTicket(data); // Check the scanned roll number with backend API\n    }\n  };\n\n  // Handle error during scanning\n  const handleError = err => {\n    console.error(\"Scan Error:\", err); // Log the error for debugging\n    setError(\"An error occurred while scanning. Please try again.\");\n  };\n\n  // Verify the scanned roll number with backend\n  const checkTicket = async rollNo => {\n    try {\n      console.log(\"Checking ticket for rollNo:\", rollNo); // Debugging: Log the roll number being checked\n      const response = await axios.post(`http://localhost:5000/api/verify-ticket`,\n      // Your backend API\n      {\n        rollNo\n      });\n      console.log(\"API Response:\", response.data); // Debugging: Log API response\n      if (response.status === 200 && response.data.status === \"success\") {\n        setSuccess(\"Successfully scanned! Ticket is valid.\");\n      } else if (response.data.status === \"duplicate\") {\n        setError(\"Duplicate ticket detected. This QR has already been scanned.\");\n      } else {\n        setError(\"Ticket is invalid or not found.\");\n      }\n    } catch (err) {\n      console.error(\"Error verifying ticket:\", err); // Log error for debugging\n      setError(\"Failed to verify the ticket. Please try again.\");\n    }\n  };\n\n  // Reset the scanner for the next scan\n  const resetScanner = () => {\n    setScannedData(null);\n    setIsScanningEnabled(true); // Enable scanning again\n  };\n  const handleBack = () => {\n    navigate(\"/admin/dashboard\"); // Navigate back to dashboard\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-6\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: /*#__PURE__*/_jsxDEV(QrReader, {\n          delay: 500,\n          onError: handleError // Error handling callback\n          ,\n          onScan: handleScan // Result handling callback\n          ,\n          style: {\n            width: \"100%\",\n            borderRadius: \"8px\",\n            border: \"2px solid #ddd\",\n            maxHeight: \"400px\"\n          },\n          facingMode: isFrontCamera ? \"user\" : \"environment\" // Default to front camera\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-4\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetScanner,\n        className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\",\n        children: \"Next Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsFrontCamera(!isFrontCamera),\n        className: \"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-4\",\n        children: \"Switch Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"52wY4yUqXiF48j3f9KhoxBxKo2w=\", false, function () {\n  return [useNavigate];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","QrReader","jsxDEV","_jsxDEV","QRScanner","_s","error","setError","success","setSuccess","scannedData","setScannedData","isScanningEnabled","setIsScanningEnabled","isFrontCamera","setIsFrontCamera","navigate","handleScan","data","console","log","checkTicket","handleError","err","rollNo","response","post","status","resetScanner","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onScan","style","width","borderRadius","border","maxHeight","facingMode","onClick","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { QrReader } from \"react-qr-reader\"; // Correct import for QR reader\r\n\r\nconst QRScanner = () => {\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n  const [success, setSuccess] = useState(\"\"); // Success message state\r\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\r\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true); // Control scanning state\r\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // Handle front/back camera\r\n  const navigate = useNavigate();\r\n\r\n  // Handle QR code scan result\r\n  const handleScan = (data) => {\r\n    console.log(\"QR Scan Result:\", data); // Debugging: Log the scanned data\r\n    if (data && isScanningEnabled) {\r\n      setScannedData(data); // Store scanned data (roll number) in state\r\n      setError(\"\"); // Clear previous error messages\r\n      setSuccess(\"\"); // Clear previous success messages\r\n      setIsScanningEnabled(false); // Disable further scanning while processing\r\n      checkTicket(data); // Check the scanned roll number with backend API\r\n    }\r\n  };\r\n\r\n  // Handle error during scanning\r\n  const handleError = (err) => {\r\n    console.error(\"Scan Error:\", err); // Log the error for debugging\r\n    setError(\"An error occurred while scanning. Please try again.\");\r\n  };\r\n\r\n  // Verify the scanned roll number with backend\r\n  const checkTicket = async (rollNo) => {\r\n    try {\r\n      console.log(\"Checking ticket for rollNo:\", rollNo); // Debugging: Log the roll number being checked\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/verify-ticket`, // Your backend API\r\n        { rollNo }\r\n      );\r\n      console.log(\"API Response:\", response.data); // Debugging: Log API response\r\n      if (response.status === 200 && response.data.status === \"success\") {\r\n        setSuccess(\"Successfully scanned! Ticket is valid.\");\r\n      } else if (response.data.status === \"duplicate\") {\r\n        setError(\"Duplicate ticket detected. This QR has already been scanned.\");\r\n      } else {\r\n        setError(\"Ticket is invalid or not found.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error verifying ticket:\", err); // Log error for debugging\r\n      setError(\"Failed to verify the ticket. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Reset the scanner for the next scan\r\n  const resetScanner = () => {\r\n    setScannedData(null);\r\n    setIsScanningEnabled(true); // Enable scanning again\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/admin/dashboard\"); // Navigate back to dashboard\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n          QR Code Scanner\r\n        </h2>\r\n\r\n        {/* QR Code Scanner */}\r\n        <div className=\"relative mb-4\">\r\n          <QrReader\r\n            delay={500}\r\n            onError={handleError} // Error handling callback\r\n            onScan={handleScan} // Result handling callback\r\n            style={{\r\n              width: \"100%\",\r\n              borderRadius: \"8px\",\r\n              border: \"2px solid #ddd\",\r\n              maxHeight: \"400px\",\r\n            }}\r\n            facingMode={isFrontCamera ? \"user\" : \"environment\"} // Default to front camera\r\n          />\r\n        </div>\r\n\r\n        {/* Error or Success Message */}\r\n        {error && <p className=\"text-red-500 text-center mb-4\">{error}</p>}\r\n        {success && <p className=\"text-green-500 text-center mb-4\">{success}</p>}\r\n\r\n        {/* Submit Button - Appears after QR Code is Scanned */}\r\n        {success && (\r\n          <button\r\n            onClick={resetScanner}\r\n            className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n          >\r\n            Next Scan\r\n          </button>\r\n        )}\r\n\r\n        {/* Back Button */}\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\"\r\n        >\r\n          Back to Dashboard\r\n        </button>\r\n\r\n        {/* Switch Camera Button */}\r\n        <button\r\n          onClick={() => setIsFrontCamera(!isFrontCamera)}\r\n          className=\"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-4\"\r\n        >\r\n          Switch Camera\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}