{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [qrData, setQrData] = useState(null);\n  const [videoConstraints, setVideoConstraints] = useState({});\n  useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const cameras = devices.filter(device => device.kind === \"videoinput\");\n      if (cameras.length > 1) {\n        setVideoConstraints({\n          deviceId: cameras[1].deviceId\n        }); // Use rear camera\n      } else {\n        var _cameras$;\n        setVideoConstraints({\n          deviceId: ((_cameras$ = cameras[0]) === null || _cameras$ === void 0 ? void 0 : _cameras$.deviceId) || undefined\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n      constraints: {\n        video: videoConstraints\n      },\n      scanDelay: 300,\n      onResult: (result, error) => {\n        if (result) {\n          setQrData(result.text);\n          console.log(\"QR Code Data:\", result.text);\n        }\n        if (error) {\n          console.error(error);\n        }\n      },\n      className: \"w-80 h-80 bg-white shadow-lg rounded-md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 p-2 bg-green-200 text-green-800 rounded-md\",\n      children: [\"Scanned Data: \", qrData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"We7Bmdoq2I9YW0IFKM3/2/4IB9I=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["useState","useEffect","QrReader","jsxDEV","_jsxDEV","QRScanner","_s","qrData","setQrData","videoConstraints","setVideoConstraints","navigator","mediaDevices","enumerateDevices","then","devices","cameras","filter","device","kind","length","deviceId","_cameras$","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","constraints","video","scanDelay","onResult","result","error","text","console","log","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { QrReader } from \"react-qr-reader\";\r\n\r\nconst QRScanner = () => {\r\n  const [qrData, setQrData] = useState(null);\r\n  const [videoConstraints, setVideoConstraints] = useState({});\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const cameras = devices.filter((device) => device.kind === \"videoinput\");\r\n      if (cameras.length > 1) {\r\n        setVideoConstraints({ deviceId: cameras[1].deviceId }); // Use rear camera\r\n      } else {\r\n        setVideoConstraints({ deviceId: cameras[0]?.deviceId || undefined });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">QR Code Scanner</h1>\r\n      <QrReader\r\n        constraints={{ video: videoConstraints }}\r\n        scanDelay={300}\r\n        onResult={(result, error) => {\r\n          if (result) {\r\n            setQrData(result.text);\r\n            console.log(\"QR Code Data:\", result.text);\r\n          }\r\n          if (error) {\r\n            console.error(error);\r\n          }\r\n        }}\r\n        className=\"w-80 h-80 bg-white shadow-lg rounded-md\"\r\n      />\r\n      {qrData && (\r\n        <p className=\"mt-4 p-2 bg-green-200 text-green-800 rounded-md\">\r\n          Scanned Data: {qrData}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdU,SAAS,CAACC,YAAY,CAACC,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;MAC1D,MAAMC,OAAO,GAAGD,OAAO,CAACE,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,YAAY,CAAC;MACxE,IAAIH,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;QACtBV,mBAAmB,CAAC;UAAEW,QAAQ,EAAEL,OAAO,CAAC,CAAC,CAAC,CAACK;QAAS,CAAC,CAAC,CAAC,CAAC;MAC1D,CAAC,MAAM;QAAA,IAAAC,SAAA;QACLZ,mBAAmB,CAAC;UAAEW,QAAQ,EAAE,EAAAC,SAAA,GAAAN,OAAO,CAAC,CAAC,CAAC,cAAAM,SAAA,uBAAVA,SAAA,CAAYD,QAAQ,KAAIE;QAAU,CAAC,CAAC;MACtE;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBACjFrB,OAAA;MAAIoB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DzB,OAAA,CAACF,QAAQ;MACP4B,WAAW,EAAE;QAAEC,KAAK,EAAEtB;MAAiB,CAAE;MACzCuB,SAAS,EAAE,GAAI;MACfC,QAAQ,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC3B,IAAID,MAAM,EAAE;UACV1B,SAAS,CAAC0B,MAAM,CAACE,IAAI,CAAC;UACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,MAAM,CAACE,IAAI,CAAC;QAC3C;QACA,IAAID,KAAK,EAAE;UACTE,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;QACtB;MACF,CAAE;MACFX,SAAS,EAAC;IAAyC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EACDtB,MAAM,iBACLH,OAAA;MAAGoB,SAAS,EAAC,iDAAiD;MAAAC,QAAA,GAAC,gBAC/C,EAAClB,MAAM;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAvCID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}