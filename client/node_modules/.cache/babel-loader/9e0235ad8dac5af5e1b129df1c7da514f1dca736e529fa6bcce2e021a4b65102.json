{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-scanner\";\nimport axios from \"axios\";\nimport { CircularProgress, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scanning, setScanning] = useState(false);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleScan = async data => {\n    if (data && !scanning) {\n      setScanning(true);\n      setLoading(true);\n      setResult(data.text);\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/students/verify-entry\", {\n          rollNo: data.text\n        });\n        if (response.data.success) {\n          alert(\"Entry Verified: Access Granted!\");\n        } else {\n          alert(\"Invalid QR Code: Entry Denied!\");\n        }\n      } catch (error) {\n        console.error(\"Error verifying entry\", error);\n        alert(\"Verification Failed. Try Again!\");\n      } finally {\n        setLoading(false);\n        setTimeout(() => setScanning(false), 3000); // Allow scanning again after 3 seconds\n      }\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: \"text-center mb-4\",\n        children: \"Scan Ticket QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onError: handleError,\n        onScan: handleScan,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), result && /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"mt-2\",\n        children: [\"Scanned Roll No: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"/HI01dsAhZxpivH1+QUdDOmlg/Y=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","QrReader","axios","CircularProgress","Typography","jsxDEV","_jsxDEV","QRScanner","_s","scanning","setScanning","result","setResult","loading","setLoading","handleScan","data","text","response","post","rollNo","success","alert","error","console","setTimeout","handleError","err","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onScan","style","width","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport QrReader from \"react-qr-scanner\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress, Typography } from \"@mui/material\";\r\n\r\nconst QRScanner = () => {\r\n  const [scanning, setScanning] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleScan = async (data) => {\r\n    if (data && !scanning) {\r\n      setScanning(true);\r\n      setLoading(true);\r\n      setResult(data.text);\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/students/verify-entry\", { rollNo: data.text });\r\n\r\n        if (response.data.success) {\r\n          alert(\"Entry Verified: Access Granted!\");\r\n        } else {\r\n          alert(\"Invalid QR Code: Entry Denied!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error verifying entry\", error);\r\n        alert(\"Verification Failed. Try Again!\");\r\n      } finally {\r\n        setLoading(false);\r\n        setTimeout(() => setScanning(false), 3000); // Allow scanning again after 3 seconds\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n        <Typography variant=\"h5\" className=\"text-center mb-4\">\r\n          Scan Ticket QR Code\r\n        </Typography>\r\n        <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        {loading && <CircularProgress className=\"mt-4\" />}\r\n        {result && <Typography className=\"mt-2\">Scanned Roll No: {result}</Typography>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}