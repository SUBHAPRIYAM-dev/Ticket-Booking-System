{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [scannedData, setScannedData] = useState(null);\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true);\n  const [isSubmitVisible, setIsSubmitVisible] = useState(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isNextScanVisible, setIsNextScanVisible] = useState(false);\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const codeReader = useRef(null);\n  const streamRef = useRef(null);\n  const startCamera = async () => {\n    try {\n      stopCamera();\n      codeReader.current = new BrowserMultiFormatReader();\n      const constraints = {\n        video: {\n          facingMode: window.innerWidth > 768 ? \"user\" : \"environment\"\n        }\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      streamRef.current = stream;\n      codeReader.current.decodeFromStream(stream, videoRef.current, (result, err) => {\n        if (result && isScanningEnabled) {\n          handleScan(result.getText());\n        }\n        if (err && err.name !== \"NotFoundException\") {\n          setError(err.message || \"Unknown error while scanning.\");\n        }\n      });\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Camera Access Error:\", err);\n      setError(err.name === \"NotAllowedError\" ? \"Camera access is blocked. Please allow camera permissions.\" : \"Unable to access camera. Please check your settings.\");\n    }\n  };\n  const stopCamera = () => {\n    if (codeReader.current) {\n      var _codeReader$current$s, _codeReader$current;\n      (_codeReader$current$s = (_codeReader$current = codeReader.current).stopContinuousDecode) === null || _codeReader$current$s === void 0 ? void 0 : _codeReader$current$s.call(_codeReader$current);\n    }\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n  };\n  useEffect(() => {\n    startCamera();\n    return () => {\n      stopCamera();\n    };\n  }, []);\n  const handleScan = data => {\n    if (data && isScanningEnabled) {\n      console.log(\"Scanned QR Code:\", data);\n      setScannedData(data);\n      setIsScanningEnabled(false);\n      setIsSubmitVisible(true);\n    }\n  };\n  const submitData = async () => {\n    try {\n      setIsSubmitDisabled(true);\n      const response = await axios.post(\"https://2rjnf65m-5000.inc1.devtunnels.ms/api/admin/verify-qrcode\", {\n        qrData: scannedData\n      });\n      if (!response.data || typeof response.data !== \"object\") {\n        throw new Error(\"Invalid response format from server.\");\n      }\n      if (response.data.success) {\n        setSuccess(\"Successfully scanned! The QR code is valid.\");\n      } else {\n        setError(response.data.message || \"Ticket verification failed.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || \"Unknown error.\";\n      console.error(\"Error verifying ticket:\", errorMessage);\n      if (err.response) {\n        if (err.response.status === 404) {\n          setError(\"No student found for this QR code.\");\n        } else if (err.response.status === 400) {\n          setError(errorMessage);\n        } else {\n          setError(\"Server error. Please try again later.\");\n        }\n      } else if (err.request) {\n        setError(\"No response from server. Check network connection.\");\n      } else {\n        setError(\"Unknown error occurred. Please try again.\");\n      }\n    } finally {\n      setIsSubmitVisible(false);\n      setIsNextScanVisible(true);\n      setIsSubmitDisabled(false);\n    }\n  };\n  const resetScanner = () => {\n    setSuccess(\"\");\n    setError(\"\");\n    setScannedData(null);\n    setIsScanningEnabled(true);\n    setIsSubmitVisible(false);\n    setIsNextScanVisible(false);\n  };\n  const handleBack = () => {\n    navigate(\"/admin/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-6\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          width: \"100%\",\n          height: \"auto\",\n          style: {\n            borderRadius: \"8px\",\n            border: \"2px solid #ddd\",\n            maxHeight: \"400px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-4\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), isSubmitVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitData,\n        disabled: isSubmitDisabled,\n        className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\",\n        children: isSubmitDisabled ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), isNextScanVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetScanner,\n        className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\",\n        children: \"Next Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"25qzm0eQ5ELDktkEMk4rFiRMqB8=\", false, function () {\n  return [useNavigate];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","BrowserMultiFormatReader","jsxDEV","_jsxDEV","QRScanner","_s","error","setError","success","setSuccess","scannedData","setScannedData","isScanningEnabled","setIsScanningEnabled","isSubmitVisible","setIsSubmitVisible","isSubmitDisabled","setIsSubmitDisabled","isNextScanVisible","setIsNextScanVisible","navigate","videoRef","codeReader","streamRef","startCamera","stopCamera","current","constraints","video","facingMode","window","innerWidth","stream","navigator","mediaDevices","getUserMedia","decodeFromStream","result","err","handleScan","getText","name","message","console","_codeReader$current$s","_codeReader$current","stopContinuousDecode","call","getTracks","forEach","track","stop","data","log","submitData","response","post","qrData","Error","_err$response","_err$response$data","errorMessage","status","request","resetScanner","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","width","height","style","borderRadius","border","maxHeight","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\r\n\r\nconst QRScanner = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [scannedData, setScannedData] = useState(null);\r\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true);\r\n  const [isSubmitVisible, setIsSubmitVisible] = useState(false);\r\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\r\n  const [isNextScanVisible, setIsNextScanVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const videoRef = useRef(null);\r\n  const codeReader = useRef(null);\r\n  const streamRef = useRef(null);\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      stopCamera();\r\n\r\n      codeReader.current = new BrowserMultiFormatReader();\r\n\r\n      const constraints = {\r\n        video: {\r\n          facingMode: window.innerWidth > 768 ? \"user\" : \"environment\",\r\n        },\r\n      };\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      streamRef.current = stream;\r\n\r\n      codeReader.current.decodeFromStream(stream, videoRef.current, (result, err) => {\r\n        if (result && isScanningEnabled) {\r\n          handleScan(result.getText());\r\n        }\r\n        if (err && err.name !== \"NotFoundException\") {\r\n          setError(err.message || \"Unknown error while scanning.\");\r\n        }\r\n      });\r\n\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Camera Access Error:\", err);\r\n      setError(\r\n        err.name === \"NotAllowedError\"\r\n          ? \"Camera access is blocked. Please allow camera permissions.\"\r\n          : \"Unable to access camera. Please check your settings.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (codeReader.current) {\r\n      codeReader.current.stopContinuousDecode?.();\r\n    }\r\n\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach((track) => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startCamera();\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, []);\r\n\r\n  const handleScan = (data) => {\r\n    if (data && isScanningEnabled) {\r\n      console.log(\"Scanned QR Code:\", data);\r\n      setScannedData(data);\r\n      setIsScanningEnabled(false);\r\n      setIsSubmitVisible(true);\r\n    }\r\n  };\r\n\r\n  const submitData = async () => {\r\n    try {\r\n      setIsSubmitDisabled(true);\r\n      const response = await axios.post(\"https://2rjnf65m-5000.inc1.devtunnels.ms/api/admin/verify-qrcode\", { qrData: scannedData });\r\n\r\n      if (!response.data || typeof response.data !== \"object\") {\r\n        throw new Error(\"Invalid response format from server.\");\r\n      }\r\n\r\n      if (response.data.success) {\r\n        setSuccess(\"Successfully scanned! The QR code is valid.\");\r\n      } else {\r\n        setError(response.data.message || \"Ticket verification failed.\");\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || err.message || \"Unknown error.\";\r\n      console.error(\"Error verifying ticket:\", errorMessage);\r\n\r\n      if (err.response) {\r\n        if (err.response.status === 404) {\r\n          setError(\"No student found for this QR code.\");\r\n        } else if (err.response.status === 400) {\r\n          setError(errorMessage);\r\n        } else {\r\n          setError(\"Server error. Please try again later.\");\r\n        }\r\n      } else if (err.request) {\r\n        setError(\"No response from server. Check network connection.\");\r\n      } else {\r\n        setError(\"Unknown error occurred. Please try again.\");\r\n      }\r\n    } finally {\r\n      setIsSubmitVisible(false);\r\n      setIsNextScanVisible(true);\r\n      setIsSubmitDisabled(false);\r\n    }\r\n  };\r\n\r\n  const resetScanner = () => {\r\n    setSuccess(\"\");\r\n    setError(\"\");\r\n    setScannedData(null);\r\n    setIsScanningEnabled(true);\r\n    setIsSubmitVisible(false);\r\n    setIsNextScanVisible(false);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/admin/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">QR Code Scanner</h2>\r\n        <div className=\"relative mb-4\">\r\n          <video ref={videoRef} autoPlay muted width=\"100%\" height=\"auto\" style={{ borderRadius: \"8px\", border: \"2px solid #ddd\", maxHeight: \"400px\" }} />\r\n        </div>\r\n        {error && <p className=\"text-red-500 text-center mb-4\">{error}</p>}\r\n        {success && <p className=\"text-green-500 text-center mb-4\">{success}</p>}\r\n        {isSubmitVisible && (\r\n          <button onClick={submitData} disabled={isSubmitDisabled} className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\">\r\n            {isSubmitDisabled ? \"Submitting...\" : \"Submit\"}\r\n          </button>\r\n        )}\r\n        {isNextScanVisible && (\r\n          <button onClick={resetScanner} className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\">Next Scan</button>\r\n        )}\r\n        <button onClick={handleBack} className=\"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\">Back to Dashboard</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}