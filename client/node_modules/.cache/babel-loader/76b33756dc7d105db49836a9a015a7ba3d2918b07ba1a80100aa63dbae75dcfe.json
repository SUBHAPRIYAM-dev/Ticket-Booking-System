{"ast":null,"code":"import axios from \"axios\";\n\n// Set baseURL dynamically for different environments (development or production)\nconst baseURL = process.env.NODE_ENV === \"production\" ? \"https://your-production-url.com/api\" : \"http://localhost:5000/api\"; // Local dev URL\n\nconst API = axios.create({\n  baseURL\n});\n\n// Add an interceptor to attach the Authorization token to every request (except login)\nAPI.interceptors.request.use(config => {\n  if (config.url !== \"/admin/login\") {\n    const token = localStorage.getItem(\"adminToken\"); // Get token from localStorage\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token if available\n    }\n  }\n  return config;\n}, error => {\n  console.error(\"‚ùå Request Interceptor Error:\", error.message);\n  return Promise.reject(error);\n});\n\n// ‚úÖ Login Admin - Ensures response structure is valid\nexport const loginAdmin = async data => {\n  try {\n    console.log(\"üîπ Sending login request with data:\", data);\n    const response = await API.post(\"/admin/login\", data);\n    console.log(\"‚úÖ Login API response:\", response);\n    if (!response.data || !response.data.token) {\n      throw new Error(\"Invalid response structure from server\");\n    }\n    localStorage.setItem(\"adminToken\", response.data.token); // Store token in localStorage\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"‚ùå Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Get List of Students - Ensures correct API response\nexport const getStudents = async () => {\n  try {\n    const response = await API.get(\"/students\");\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"‚ùå Error fetching students:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Register a Student\nexport const registerStudent = async data => {\n  try {\n    const response = await API.post(\"/students/register\", data);\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"‚ùå Error registering student:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Approve a Student\nexport const approveStudent = async id => {\n  try {\n    const response = await API.put(`/admin/approve/${id}`);\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"‚ùå Error approving student:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Reject a Student\nexport const rejectStudent = async id => {\n  try {\n    const response = await API.put(`/admin/reject/${id}`);\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"‚ùå Error rejecting student:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Get Student by ID (useful for Admin Dashboard to get individual student details)\nexport const getStudentById = async id => {\n  try {\n    const response = await API.get(`/students/${id}`);\n    if (!response.data) throw new Error(\"Invalid response from server\");\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error(\"‚ùå Error fetching student by ID:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Handle Token Expiry (Optional): You can add logic here to handle token expiration, such as redirecting to the login page\nconst handleTokenExpiry = () => {\n  const token = localStorage.getItem(\"adminToken\");\n  if (!token) {\n    console.warn(\"‚ùå Token expired or not available. Redirecting to login...\");\n    // Optionally, redirect the user to the login page if the token is invalid\n    window.location.href = \"/admin/login\";\n  }\n};","map":{"version":3,"names":["axios","baseURL","process","env","NODE_ENV","API","create","interceptors","request","use","config","url","token","localStorage","getItem","headers","error","console","message","Promise","reject","loginAdmin","data","log","response","post","Error","setItem","_error$response","getStudents","get","_error$response2","registerStudent","_error$response3","approveStudent","id","put","_error$response4","rejectStudent","_error$response5","getStudentById","_error$response6","handleTokenExpiry","warn","window","location","href"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Set baseURL dynamically for different environments (development or production)\r\nconst baseURL = process.env.NODE_ENV === \"production\"\r\n  ? \"https://your-production-url.com/api\"\r\n  : \"http://localhost:5000/api\"; // Local dev URL\r\n\r\nconst API = axios.create({ baseURL });\r\n\r\n// Add an interceptor to attach the Authorization token to every request (except login)\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    if (config.url !== \"/admin/login\") {\r\n      const token = localStorage.getItem(\"adminToken\"); // Get token from localStorage\r\n      if (token) {\r\n        config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token if available\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"‚ùå Request Interceptor Error:\", error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ‚úÖ Login Admin - Ensures response structure is valid\r\nexport const loginAdmin = async (data) => {\r\n  try {\r\n    console.log(\"üîπ Sending login request with data:\", data);\r\n    const response = await API.post(\"/admin/login\", data);\r\n\r\n    console.log(\"‚úÖ Login API response:\", response);\r\n\r\n    if (!response.data || !response.data.token) {\r\n      throw new Error(\"Invalid response structure from server\");\r\n    }\r\n\r\n    localStorage.setItem(\"adminToken\", response.data.token); // Store token in localStorage\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Get List of Students - Ensures correct API response\r\nexport const getStudents = async () => {\r\n  try {\r\n    const response = await API.get(\"/students\");\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error fetching students:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Register a Student\r\nexport const registerStudent = async (data) => {\r\n  try {\r\n    const response = await API.post(\"/students/register\", data);\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error registering student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Approve a Student\r\nexport const approveStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/approve/${id}`);\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error approving student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Reject a Student\r\nexport const rejectStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/reject/${id}`);\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error rejecting student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Get Student by ID (useful for Admin Dashboard to get individual student details)\r\nexport const getStudentById = async (id) => {\r\n  try {\r\n    const response = await API.get(`/students/${id}`);\r\n    if (!response.data) throw new Error(\"Invalid response from server\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error fetching student by ID:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Handle Token Expiry (Optional): You can add logic here to handle token expiration, such as redirecting to the login page\r\nconst handleTokenExpiry = () => {\r\n  const token = localStorage.getItem(\"adminToken\");\r\n  if (!token) {\r\n    console.warn(\"‚ùå Token expired or not available. Redirecting to login...\");\r\n    // Optionally, redirect the user to the login page if the token is invalid\r\n    window.location.href = \"/admin/login\";\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}