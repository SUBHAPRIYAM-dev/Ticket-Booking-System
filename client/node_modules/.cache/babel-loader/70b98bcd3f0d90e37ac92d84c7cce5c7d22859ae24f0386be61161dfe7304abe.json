{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\n\n// ✅ Add an interceptor to attach the Authorization token to every request (except login)\nAPI.interceptors.request.use(config => {\n  if (config.url !== \"/admin/login\") {\n    const token = localStorage.getItem(\"adminToken\"); // Get token from localStorage\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token if available\n    }\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// ✅ Login Admin - Improved error handling and token storage\nexport const loginAdmin = async data => {\n  try {\n    const response = await API.post(\"/admin/login\", data);\n    if (response.data.token) {\n      localStorage.setItem(\"adminToken\", response.data.token); // Store token in localStorage\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"❌ Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Get List of Students\nexport const getStudents = async () => {\n  try {\n    const response = await API.get(\"/students\");\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"❌ Error fetching students:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Register a Student\nexport const registerStudent = async data => {\n  try {\n    const response = await API.post(\"/students/register\", data);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"❌ Error registering student:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Approve a Student\nexport const approveStudent = async id => {\n  try {\n    const response = await API.put(`/admin/approve/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"❌ Error approving student:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Reject a Student\nexport const rejectStudent = async id => {\n  try {\n    const response = await API.put(`/admin/reject/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"❌ Error rejecting student:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","url","token","localStorage","getItem","headers","error","Promise","reject","loginAdmin","data","response","post","setItem","_error$response","console","message","getStudents","get","_error$response2","registerStudent","_error$response3","approveStudent","id","put","_error$response4","rejectStudent","_error$response5"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000/api\" });\r\n\r\n// ✅ Add an interceptor to attach the Authorization token to every request (except login)\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    if (config.url !== \"/admin/login\") {\r\n      const token = localStorage.getItem(\"adminToken\"); // Get token from localStorage\r\n      if (token) {\r\n        config.headers[\"Authorization\"] = `Bearer ${token}`; // Attach token if available\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// ✅ Login Admin - Improved error handling and token storage\r\nexport const loginAdmin = async (data) => {\r\n  try {\r\n    const response = await API.post(\"/admin/login\", data);\r\n\r\n    if (response.data.token) {\r\n      localStorage.setItem(\"adminToken\", response.data.token); // Store token in localStorage\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Get List of Students\r\nexport const getStudents = async () => {\r\n  try {\r\n    const response = await API.get(\"/students\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Error fetching students:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Register a Student\r\nexport const registerStudent = async (data) => {\r\n  try {\r\n    const response = await API.post(\"/students/register\", data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Error registering student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Approve a Student\r\nexport const approveStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/approve/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Error approving student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Reject a Student\r\nexport const rejectStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/reject/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Error rejecting student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}