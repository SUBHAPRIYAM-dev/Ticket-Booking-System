{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [scannedData, setScannedData] = useState(null);\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true);\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // To handle camera switching\n  const [videoStream, setVideoStream] = useState(null); // To store the camera stream\n  const videoRef = useRef(null); // To reference the video element\n  const navigate = useNavigate();\n\n  // Start the camera stream with constraints\n  const startCamera = facingMode => {\n    const constraints = {\n      video: {\n        facingMode: facingMode,\n        // Choose between user (front) and environment (back) camera\n        width: {\n          ideal: 1280\n        },\n        // Optional: set width\n        height: {\n          ideal: 720\n        } // Optional: set height\n      }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream; // Set the video stream to the video element\n      }\n      setVideoStream(stream); // Save the video stream in state for later cleanup\n    }).catch(err => {\n      console.error(\"Error accessing camera: \", err);\n      setError(\"Unable to access camera. Please check your permissions.\");\n    });\n  };\n\n  // Switch the camera between front and back\n  const toggleCamera = () => {\n    const newCamera = isFrontCamera ? \"environment\" : \"user\"; // Toggle between front and back camera\n    setIsFrontCamera(!isFrontCamera); // Toggle the camera state\n    startCamera(newCamera); // Restart the camera with new facing mode\n  };\n  useEffect(() => {\n    startCamera(isFrontCamera ? \"user\" : \"environment\"); // Start with the front camera by default\n\n    // Cleanup the camera stream on unmount\n    return () => {\n      if (videoStream) {\n        videoStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [isFrontCamera]); // Restart camera when facing mode changes\n\n  const handleScan = data => {\n    if (data && isScanningEnabled) {\n      setScannedData(data);\n      setError(\"\");\n      setSuccess(\"\");\n      setIsScanningEnabled(false);\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n    setError(\"An error occurred while scanning. Please try again.\");\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.put(`http://localhost:5000/api/verify-ticket/${scannedData}`);\n      if (response.status === 200) {\n        setSuccess(\"Ticket verified successfully!\");\n        setTimeout(() => {\n          setSuccess(\"\");\n          resetScanner();\n        }, 3000);\n      }\n    } catch (err) {\n      console.log(err);\n      if (err.response.status === 404) {\n        setError(\"Ticket not found. Please check the QR code and try again.\");\n      } else {\n        setError(\"Failed to verify the ticket. Please try again.\");\n      }\n      setTimeout(() => {\n        setError(\"\");\n        resetScanner();\n      }, 3000);\n    }\n  };\n  const resetScanner = () => {\n    setScannedData(null);\n    setIsScanningEnabled(true);\n  };\n  const handleBack = () => {\n    navigate(\"/admin/dashboard\"); // Navigate back to the dashboard\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-6\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          width: \"100%\",\n          height: \"auto\",\n          style: {\n            borderRadius: \"8px\",\n            border: \"2px solid #ddd\",\n            maxHeight: \"400px\" // Max height for the camera view\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-4\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), scannedData && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\",\n        children: \"Submit Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCamera,\n        className: \"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-4\",\n        children: \"Switch Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"7yw2yc6n665ZUPOAZ0Kl/xfMWGw=\", false, function () {\n  return [useNavigate];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","jsxDEV","_jsxDEV","QRScanner","_s","error","setError","success","setSuccess","scannedData","setScannedData","isScanningEnabled","setIsScanningEnabled","isFrontCamera","setIsFrontCamera","videoStream","setVideoStream","videoRef","navigate","startCamera","facingMode","constraints","video","width","ideal","height","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","catch","err","console","toggleCamera","newCamera","getTracks","forEach","track","stop","handleScan","data","handleError","handleSubmit","response","put","status","setTimeout","resetScanner","log","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","borderRadius","border","maxHeight","onClick","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst QRScanner = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [scannedData, setScannedData] = useState(null);\r\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true);\r\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // To handle camera switching\r\n  const [videoStream, setVideoStream] = useState(null); // To store the camera stream\r\n  const videoRef = useRef(null); // To reference the video element\r\n  const navigate = useNavigate();\r\n\r\n  // Start the camera stream with constraints\r\n  const startCamera = (facingMode) => {\r\n    const constraints = {\r\n      video: {\r\n        facingMode: facingMode, // Choose between user (front) and environment (back) camera\r\n        width: { ideal: 1280 }, // Optional: set width\r\n        height: { ideal: 720 }, // Optional: set height\r\n      },\r\n    };\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then((stream) => {\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream; // Set the video stream to the video element\r\n        }\r\n        setVideoStream(stream); // Save the video stream in state for later cleanup\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing camera: \", err);\r\n        setError(\"Unable to access camera. Please check your permissions.\");\r\n      });\r\n  };\r\n\r\n  // Switch the camera between front and back\r\n  const toggleCamera = () => {\r\n    const newCamera = isFrontCamera ? \"environment\" : \"user\"; // Toggle between front and back camera\r\n    setIsFrontCamera(!isFrontCamera); // Toggle the camera state\r\n    startCamera(newCamera); // Restart the camera with new facing mode\r\n  };\r\n\r\n  useEffect(() => {\r\n    startCamera(isFrontCamera ? \"user\" : \"environment\"); // Start with the front camera by default\r\n\r\n    // Cleanup the camera stream on unmount\r\n    return () => {\r\n      if (videoStream) {\r\n        videoStream.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, [isFrontCamera]); // Restart camera when facing mode changes\r\n\r\n  const handleScan = (data) => {\r\n    if (data && isScanningEnabled) {\r\n      setScannedData(data);\r\n      setError(\"\");\r\n      setSuccess(\"\");\r\n      setIsScanningEnabled(false);\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n    setError(\"An error occurred while scanning. Please try again.\");\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:5000/api/verify-ticket/${scannedData}`\r\n      );\r\n      if (response.status === 200) {\r\n        setSuccess(\"Ticket verified successfully!\");\r\n        setTimeout(() => {\r\n          setSuccess(\"\");\r\n          resetScanner();\r\n        }, 3000);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 404) {\r\n        setError(\"Ticket not found. Please check the QR code and try again.\");\r\n      } else {\r\n        setError(\"Failed to verify the ticket. Please try again.\");\r\n      }\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n        resetScanner();\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const resetScanner = () => {\r\n    setScannedData(null);\r\n    setIsScanningEnabled(true);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/admin/dashboard\"); // Navigate back to the dashboard\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-8 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n          QR Code Scanner\r\n        </h2>\r\n\r\n        {/* Video Feed */}\r\n        <div className=\"relative mb-4\">\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            playsInline\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              border: \"2px solid #ddd\",\r\n              maxHeight: \"400px\", // Max height for the camera view\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* Error or Success Message */}\r\n        {error && <p className=\"text-red-500 text-center mb-4\">{error}</p>}\r\n        {success && <p className=\"text-green-500 text-center mb-4\">{success}</p>}\r\n\r\n        {/* Submit Button - Appears after QR Code is Scanned */}\r\n        {scannedData && (\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n          >\r\n            Submit Ticket\r\n          </button>\r\n        )}\r\n\r\n        {/* Back Button */}\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-4\"\r\n        >\r\n          Back to Dashboard\r\n        </button>\r\n\r\n        {/* Switch Camera Button */}\r\n        <button\r\n          onClick={toggleCamera}\r\n          className=\"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-4\"\r\n        >\r\n          Switch Camera\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMqB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,MAAMoB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMoB,WAAW,GAAIC,UAAU,IAAK;IAClC,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAE;QACLF,UAAU,EAAEA,UAAU;QAAE;QACxBG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAK,CAAC;QAAE;QACxBC,MAAM,EAAE;UAAED,KAAK,EAAE;QAAI,CAAC,CAAE;MAC1B;IACF,CAAC;IAEDE,SAAS,CAACC,YAAY,CACnBC,YAAY,CAACP,WAAW,CAAC,CACzBQ,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAIb,QAAQ,CAACc,OAAO,EAAE;QACpBd,QAAQ,CAACc,OAAO,CAACC,SAAS,GAAGF,MAAM,CAAC,CAAC;MACvC;MACAd,cAAc,CAACc,MAAM,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAAC9B,KAAK,CAAC,0BAA0B,EAAE6B,GAAG,CAAC;MAC9C5B,QAAQ,CAAC,yDAAyD,CAAC;IACrE,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAM8B,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAGxB,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,CAAC;IAC1DC,gBAAgB,CAAC,CAACD,aAAa,CAAC,CAAC,CAAC;IAClCM,WAAW,CAACkB,SAAS,CAAC,CAAC,CAAC;EAC1B,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACdsB,WAAW,CAACN,aAAa,GAAG,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC;;IAErD;IACA,OAAO,MAAM;MACX,IAAIE,WAAW,EAAE;QACfA,WAAW,CAACuB,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC1D;IACF,CAAC;EACH,CAAC,EAAE,CAAC5B,aAAa,CAAC,CAAC,CAAC,CAAC;;EAErB,MAAM6B,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,IAAIhC,iBAAiB,EAAE;MAC7BD,cAAc,CAACiC,IAAI,CAAC;MACpBrC,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdI,oBAAoB,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC;EAED,MAAMgC,WAAW,GAAIV,GAAG,IAAK;IAC3BC,OAAO,CAAC9B,KAAK,CAAC6B,GAAG,CAAC;IAClB5B,QAAQ,CAAC,qDAAqD,CAAC;EACjE,CAAC;EAED,MAAMuC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAC9B,2CAA2CtC,WAAW,EACxD,CAAC;MACD,IAAIqC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BxC,UAAU,CAAC,+BAA+B,CAAC;QAC3CyC,UAAU,CAAC,MAAM;UACfzC,UAAU,CAAC,EAAE,CAAC;UACd0C,YAAY,CAAC,CAAC;QAChB,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC,OAAOhB,GAAG,EAAE;MACZC,OAAO,CAACgB,GAAG,CAACjB,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACY,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC/B1C,QAAQ,CAAC,2DAA2D,CAAC;MACvE,CAAC,MAAM;QACLA,QAAQ,CAAC,gDAAgD,CAAC;MAC5D;MACA2C,UAAU,CAAC,MAAM;QACf3C,QAAQ,CAAC,EAAE,CAAC;QACZ4C,YAAY,CAAC,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMA,YAAY,GAAGA,CAAA,KAAM;IACzBxC,cAAc,CAAC,IAAI,CAAC;IACpBE,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMwC,UAAU,GAAGA,CAAA,KAAM;IACvBlC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEhB,OAAA;IAAKmD,SAAS,EAAC,sEAAsE;IAAAC,QAAA,eACnFpD,OAAA;MAAKmD,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChEpD,OAAA;QAAImD,SAAS,EAAC,uDAAuD;QAAAC,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGLxD,OAAA;QAAKmD,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BpD,OAAA;UACEyD,GAAG,EAAE1C,QAAS;UACd2C,QAAQ;UACRC,WAAW;UACXtC,KAAK,EAAC,MAAM;UACZE,MAAM,EAAC,MAAM;UACbqC,KAAK,EAAE;YACLC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,gBAAgB;YACxBC,SAAS,EAAE,OAAO,CAAE;UACtB;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLrD,KAAK,iBAAIH,OAAA;QAAGmD,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAEjD;MAAK;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjEnD,OAAO,iBAAIL,OAAA;QAAGmD,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAAE/C;MAAO;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGvEjD,WAAW,iBACVP,OAAA;QACEgE,OAAO,EAAErB,YAAa;QACtBQ,SAAS,EAAC,wIAAwI;QAAAC,QAAA,EACnJ;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eAGDxD,OAAA;QACEgE,OAAO,EAAEd,UAAW;QACpBC,SAAS,EAAC,wIAAwI;QAAAC,QAAA,EACnJ;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGTxD,OAAA;QACEgE,OAAO,EAAE9B,YAAa;QACtBiB,SAAS,EAAC,8IAA8I;QAAAC,QAAA,EACzJ;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtD,EAAA,CA5JID,SAAS;EAAA,QAQIJ,WAAW;AAAA;AAAAoE,EAAA,GARxBhE,SAAS;AA8Jf,eAAeA,SAAS;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}