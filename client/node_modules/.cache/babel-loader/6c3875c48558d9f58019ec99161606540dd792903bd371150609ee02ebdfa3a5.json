{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000\"; // üîπ Change this if your backend URL is different\nconst API = axios.create({\n  baseURL: `${BASE_URL}/api`\n});\n\n// ‚úÖ Attach Authorization Token to Every Request (Except Login)\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"adminToken\");\n  if (token && config.url !== \"/admin/login\") {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// ‚úÖ Login Admin\nexport const loginAdmin = async data => {\n  try {\n    console.log(\"üîπ Sending login request with data:\", data);\n    const response = await API.post(\"/admin/login\", data);\n    console.log(\"‚úÖ Login API response:\", response);\n    if (!response.data || !response.data.token) {\n      throw new Error(\"Invalid response structure from server\");\n    }\n    localStorage.setItem(\"adminToken\", response.data.token);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"‚ùå Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Get List of Students (Fixes studentIdCard Path)\nexport const getStudents = async () => {\n  try {\n    const response = await API.get(\"/students\");\n    console.log(\"‚úÖ Raw API Response:\", response.data); // üîπ Debugging step\n\n    if (!response.data) {\n      throw new Error(\"Invalid response from server\");\n    }\n\n    // ‚úÖ Convert relative ID card URLs to full URLs\n    const students = response.data.map(student => ({\n      ...student,\n      studentIdCard: student.studentIdCard ? student.studentIdCard.startsWith(\"http\") // ‚úÖ If full URL, keep it\n      ? student.studentIdCard : `${BASE_URL}/uploads/${student.studentIdCard}` // ‚úÖ If relative, fix it\n      : null // ‚úÖ Handle missing images properly\n    }));\n    console.log(\"‚úÖ Processed Students Data:\", students);\n    return students;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"‚ùå Error fetching students:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Register a Student\nexport const registerStudent = async data => {\n  try {\n    const response = await API.post(\"/students/register\", data);\n    if (!response.data) {\n      throw new Error(\"Invalid response from server\");\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"‚ùå Error registering student:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Approve a Student\nexport const approveStudent = async id => {\n  try {\n    const response = await API.put(`/admin/approve/${id}`);\n    if (!response.data) {\n      throw new Error(\"Invalid response from server\");\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"‚ùå Error approving student:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// ‚úÖ Reject a Student\nexport const rejectStudent = async id => {\n  try {\n    const response = await API.put(`/admin/reject/${id}`);\n    if (!response.data) {\n      throw new Error(\"Invalid response from server\");\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"‚ùå Error rejecting student:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","url","headers","error","Promise","reject","loginAdmin","data","console","log","response","post","Error","setItem","_error$response","message","getStudents","get","students","map","student","studentIdCard","startsWith","_error$response2","registerStudent","_error$response3","approveStudent","id","put","_error$response4","rejectStudent","_error$response5"],"sources":["E:/Ticket booking/client/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000\"; // üîπ Change this if your backend URL is different\r\nconst API = axios.create({ baseURL: `${BASE_URL}/api` });\r\n\r\n// ‚úÖ Attach Authorization Token to Every Request (Except Login)\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"adminToken\");\r\n    if (token && config.url !== \"/admin/login\") {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// ‚úÖ Login Admin\r\nexport const loginAdmin = async (data) => {\r\n  try {\r\n    console.log(\"üîπ Sending login request with data:\", data);\r\n    const response = await API.post(\"/admin/login\", data);\r\n\r\n    console.log(\"‚úÖ Login API response:\", response);\r\n\r\n    if (!response.data || !response.data.token) {\r\n      throw new Error(\"Invalid response structure from server\");\r\n    }\r\n\r\n    localStorage.setItem(\"adminToken\", response.data.token);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Get List of Students (Fixes studentIdCard Path)\r\nexport const getStudents = async () => {\r\n  try {\r\n    const response = await API.get(\"/students\");\r\n\r\n    console.log(\"‚úÖ Raw API Response:\", response.data); // üîπ Debugging step\r\n\r\n    if (!response.data) {\r\n      throw new Error(\"Invalid response from server\");\r\n    }\r\n\r\n    // ‚úÖ Convert relative ID card URLs to full URLs\r\n    const students = response.data.map((student) => ({\r\n      ...student,\r\n      studentIdCard: student.studentIdCard\r\n        ? student.studentIdCard.startsWith(\"http\") // ‚úÖ If full URL, keep it\r\n          ? student.studentIdCard\r\n          : `${BASE_URL}/uploads/${student.studentIdCard}` // ‚úÖ If relative, fix it\r\n        : null, // ‚úÖ Handle missing images properly\r\n    }));\r\n\r\n    console.log(\"‚úÖ Processed Students Data:\", students);\r\n    return students;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error fetching students:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Register a Student\r\nexport const registerStudent = async (data) => {\r\n  try {\r\n    const response = await API.post(\"/students/register\", data);\r\n\r\n    if (!response.data) {\r\n      throw new Error(\"Invalid response from server\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error registering student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Approve a Student\r\nexport const approveStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/approve/${id}`);\r\n\r\n    if (!response.data) {\r\n      throw new Error(\"Invalid response from server\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error approving student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ‚úÖ Reject a Student\r\nexport const rejectStudent = async (id) => {\r\n  try {\r\n    const response = await API.put(`/admin/reject/${id}`);\r\n\r\n    if (!response.data) {\r\n      throw new Error(\"Invalid response from server\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error rejecting student:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;AAC1C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAAEC,OAAO,EAAE,GAAGH,QAAQ;AAAO,CAAC,CAAC;;AAExD;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,IAAIF,KAAK,IAAID,MAAM,CAACI,GAAG,KAAK,cAAc,EAAE;IAC1CJ,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,IAAI,CAAC;IACxD,MAAMG,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,cAAc,EAAEJ,IAAI,CAAC;IAErDC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAAC;IAE9C,IAAI,CAACA,QAAQ,CAACH,IAAI,IAAI,CAACG,QAAQ,CAACH,IAAI,CAACT,KAAK,EAAE;MAC1C,MAAM,IAAIc,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEAb,YAAY,CAACc,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAACH,IAAI,CAACT,KAAK,CAAC;IACvD,OAAOY,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAW,eAAA;IACdN,OAAO,CAACL,KAAK,CAAC,gBAAgB,EAAE,EAAAW,eAAA,GAAAX,KAAK,CAACO,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,KAAIJ,KAAK,CAACY,OAAO,CAAC;IACtE,MAAMZ,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMnB,GAAG,CAAC0B,GAAG,CAAC,WAAW,CAAC;IAE3CT,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC;;IAEnD,IAAI,CAACG,QAAQ,CAACH,IAAI,EAAE;MAClB,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;IACjD;;IAEA;IACA,MAAMM,QAAQ,GAAGR,QAAQ,CAACH,IAAI,CAACY,GAAG,CAAEC,OAAO,KAAM;MAC/C,GAAGA,OAAO;MACVC,aAAa,EAAED,OAAO,CAACC,aAAa,GAChCD,OAAO,CAACC,aAAa,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC;MAAA,EACvCF,OAAO,CAACC,aAAa,GACrB,GAAG/B,QAAQ,YAAY8B,OAAO,CAACC,aAAa,EAAE,CAAC;MAAA,EACjD,IAAI,CAAE;IACZ,CAAC,CAAC,CAAC;IAEHb,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAES,QAAQ,CAAC;IACnD,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOf,KAAK,EAAE;IAAA,IAAAoB,gBAAA;IACdf,OAAO,CAACL,KAAK,CAAC,4BAA4B,EAAE,EAAAoB,gBAAA,GAAApB,KAAK,CAACO,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIJ,KAAK,CAACY,OAAO,CAAC;IAClF,MAAMZ,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMqB,eAAe,GAAG,MAAOjB,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,oBAAoB,EAAEJ,IAAI,CAAC;IAE3D,IAAI,CAACG,QAAQ,CAACH,IAAI,EAAE;MAClB,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEA,OAAOF,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAAsB,gBAAA;IACdjB,OAAO,CAACL,KAAK,CAAC,8BAA8B,EAAE,EAAAsB,gBAAA,GAAAtB,KAAK,CAACO,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBlB,IAAI,KAAIJ,KAAK,CAACY,OAAO,CAAC;IACpF,MAAMZ,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMuB,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMnB,GAAG,CAACqC,GAAG,CAAC,kBAAkBD,EAAE,EAAE,CAAC;IAEtD,IAAI,CAACjB,QAAQ,CAACH,IAAI,EAAE;MAClB,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEA,OAAOF,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAA0B,gBAAA;IACdrB,OAAO,CAACL,KAAK,CAAC,4BAA4B,EAAE,EAAA0B,gBAAA,GAAA1B,KAAK,CAACO,QAAQ,cAAAmB,gBAAA,uBAAdA,gBAAA,CAAgBtB,IAAI,KAAIJ,KAAK,CAACY,OAAO,CAAC;IAClF,MAAMZ,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAM2B,aAAa,GAAG,MAAOH,EAAE,IAAK;EACzC,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMnB,GAAG,CAACqC,GAAG,CAAC,iBAAiBD,EAAE,EAAE,CAAC;IAErD,IAAI,CAACjB,QAAQ,CAACH,IAAI,EAAE;MAClB,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEA,OAAOF,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA,IAAA4B,gBAAA;IACdvB,OAAO,CAACL,KAAK,CAAC,4BAA4B,EAAE,EAAA4B,gBAAA,GAAA5B,KAAK,CAACO,QAAQ,cAAAqB,gBAAA,uBAAdA,gBAAA,CAAgBxB,IAAI,KAAIJ,KAAK,CAACY,OAAO,CAAC;IAClF,MAAMZ,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}