{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [qrData, setQrData] = useState(null);\n  const [error, setError] = useState(null);\n  const codeReader = new BrowserMultiFormatReader();\n  useEffect(() => {\n    // Start scanning from the camera\n    codeReader.decodeFromVideoDevice(undefined, \"video\", (result, err) => {\n      if (result) {\n        setQrData(result.getText());\n        console.log(\"QR Code Data:\", result.getText());\n      }\n      if (err) {\n        setError(err.message);\n      }\n    }).catch(err => setError(err.message));\n    return () => {\n      codeReader.reset(); // Clean up when component unmounts\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      className: \"w-80 h-80 bg-black shadow-lg rounded-md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 p-2 bg-green-200 text-green-800 rounded-md\",\n      children: [\"Scanned Data: \", qrData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"UNEEp1z9NfKpxrwR+adb54D8s0U=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["useState","useEffect","BrowserMultiFormatReader","jsxDEV","_jsxDEV","QRScanner","_s","qrData","setQrData","error","setError","codeReader","decodeFromVideoDevice","undefined","result","err","getText","console","log","message","catch","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\r\n\r\nconst QRScanner = () => {\r\n  const [qrData, setQrData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const codeReader = new BrowserMultiFormatReader();\r\n\r\n  useEffect(() => {\r\n    // Start scanning from the camera\r\n    codeReader\r\n      .decodeFromVideoDevice(undefined, \"video\", (result, err) => {\r\n        if (result) {\r\n          setQrData(result.getText());\r\n          console.log(\"QR Code Data:\", result.getText());\r\n        }\r\n        if (err) {\r\n          setError(err.message);\r\n        }\r\n      })\r\n      .catch((err) => setError(err.message));\r\n\r\n    return () => {\r\n      codeReader.reset(); // Clean up when component unmounts\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">QR Code Scanner</h1>\r\n      <video id=\"video\" className=\"w-80 h-80 bg-black shadow-lg rounded-md\" />\r\n      {qrData && (\r\n        <p className=\"mt-4 p-2 bg-green-200 text-green-800 rounded-md\">\r\n          Scanned Data: {qrData}\r\n        </p>\r\n      )}\r\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,wBAAwB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMW,UAAU,GAAG,IAAIT,wBAAwB,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd;IACAU,UAAU,CACPC,qBAAqB,CAACC,SAAS,EAAE,OAAO,EAAE,CAACC,MAAM,EAAEC,GAAG,KAAK;MAC1D,IAAID,MAAM,EAAE;QACVN,SAAS,CAACM,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;QAC3BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MAChD;MACA,IAAID,GAAG,EAAE;QACPL,QAAQ,CAACK,GAAG,CAACI,OAAO,CAAC;MACvB;IACF,CAAC,CAAC,CACDC,KAAK,CAAEL,GAAG,IAAKL,QAAQ,CAACK,GAAG,CAACI,OAAO,CAAC,CAAC;IAExC,OAAO,MAAM;MACXR,UAAU,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBACjFnB,OAAA;MAAIkB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DvB,OAAA;MAAOwB,EAAE,EAAC,OAAO;MAACN,SAAS,EAAC;IAAyC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvEpB,MAAM,iBACLH,OAAA;MAAGkB,SAAS,EAAC,iDAAiD;MAAAC,QAAA,GAAC,gBAC/C,EAAChB,MAAM;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACJ,EACAlB,KAAK,iBAAIL,OAAA;MAAGkB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACrB,EAAA,CApCID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}