{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [cameraAccess, setCameraAccess] = useState(false); // State for camera access\n  const videoRef = useRef(null);\n  useEffect(() => {\n    // Check for camera permission when component mounts\n    const checkCameraAccess = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        setCameraAccess(true); // Camera access granted\n      } catch (err) {\n        setCameraAccess(false); // Camera access denied or failed\n        console.error(\"Camera permission error: \", err);\n        setError(\"Unable to access the camera. Please check your permissions.\");\n      }\n    };\n    checkCameraAccess(); // Check camera permission\n\n    return () => {\n      // Cleanup camera on unmount\n      if (videoRef.current && videoRef.current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Handle QR code scan result\n  const handleScan = data => {\n    if (data) {\n      console.log(\"Scanned QR Code Data: \", data);\n      setScannedData(data); // Update scanned data state\n      setError(\"\"); // Clear error message\n    }\n  };\n\n  // Handle error during scanning\n  const handleError = err => {\n    console.error(\"QR Reader Error: \", err);\n    setError(\"An error occurred while scanning. Please try again.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-4\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), !cameraAccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error || \"Camera access is denied or unavailable.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), cameraAccess && /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 500,\n        onError: handleError,\n        onResult: handleScan,\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          borderRadius: \"8px\",\n          border: \"2px solid #ddd\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), scannedData && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-4\",\n        children: [\"Successfully scanned: \", scannedData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"o2w3NEuNlthRpsZyBUHdEXPbNTk=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QrReader","jsxDEV","_jsxDEV","QRScanner","_s","scannedData","setScannedData","error","setError","cameraAccess","setCameraAccess","videoRef","checkCameraAccess","navigator","mediaDevices","getUserMedia","video","err","console","current","srcObject","stream","tracks","getTracks","forEach","track","stop","handleScan","data","log","handleError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onResult","style","width","height","borderRadius","border","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QrReader } from \"react-qr-reader\";\r\n\r\nconst QRScanner = () => {\r\n  const [scannedData, setScannedData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [cameraAccess, setCameraAccess] = useState(false); // State for camera access\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Check for camera permission when component mounts\r\n    const checkCameraAccess = async () => {\r\n      try {\r\n        await navigator.mediaDevices.getUserMedia({ video: true });\r\n        setCameraAccess(true); // Camera access granted\r\n      } catch (err) {\r\n        setCameraAccess(false); // Camera access denied or failed\r\n        console.error(\"Camera permission error: \", err);\r\n        setError(\"Unable to access the camera. Please check your permissions.\");\r\n      }\r\n    };\r\n\r\n    checkCameraAccess(); // Check camera permission\r\n\r\n    return () => {\r\n      // Cleanup camera on unmount\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const stream = videoRef.current.srcObject;\r\n        const tracks = stream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Handle QR code scan result\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      console.log(\"Scanned QR Code Data: \", data);\r\n      setScannedData(data); // Update scanned data state\r\n      setError(\"\"); // Clear error message\r\n    }\r\n  };\r\n\r\n  // Handle error during scanning\r\n  const handleError = (err) => {\r\n    console.error(\"QR Reader Error: \", err);\r\n    setError(\"An error occurred while scanning. Please try again.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-4\">\r\n          QR Code Scanner\r\n        </h2>\r\n\r\n        {/* Error Handling for Camera Access */}\r\n        {!cameraAccess && (\r\n          <div className=\"text-red-500 text-center mb-4\">\r\n            {error || \"Camera access is denied or unavailable.\"}\r\n          </div>\r\n        )}\r\n\r\n        {/* QR Code Scanner */}\r\n        {cameraAccess && (\r\n          <QrReader\r\n            delay={500}\r\n            onError={handleError}\r\n            onResult={handleScan}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"auto\",\r\n              borderRadius: \"8px\",\r\n              border: \"2px solid #ddd\",\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* Display Scanned Data */}\r\n        {scannedData && (\r\n          <p className=\"text-green-500 text-center mb-4\">\r\n            Successfully scanned: {scannedData}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}