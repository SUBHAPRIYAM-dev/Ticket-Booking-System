{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { QrReader } from \"react-qr-reader\"; // Correct import for QR reader\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [error, setError] = useState(\"\"); // Error message state\n  const [success, setSuccess] = useState(\"\"); // Success message state\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true); // Control scanning state\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // Handle front/back camera\n  const navigate = useNavigate();\n\n  // Use Ref to hold video element\n  const videoRef = useRef(null);\n\n  // Start the camera stream with constraints\n  const startCamera = facingMode => {\n    const constraints = {\n      video: {\n        facingMode: facingMode,\n        // Choose between user (front) and environment (back) camera\n        width: {\n          ideal: 1280\n        },\n        height: {\n          ideal: 720\n        }\n      }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }).catch(err => {\n      console.error(\"Error accessing camera: \", err);\n      setError(\"Unable to access camera. Please check your permissions.\");\n    });\n  };\n\n  // Switch the camera between front and back\n  const toggleCamera = () => {\n    const newCamera = isFrontCamera ? \"environment\" : \"user\"; // Toggle between front and back camera\n    setIsFrontCamera(!isFrontCamera); // Toggle the camera state\n    startCamera(newCamera); // Restart the camera with new facing mode\n  };\n\n  // Start camera on component mount\n  useEffect(() => {\n    startCamera(isFrontCamera ? \"user\" : \"environment\"); // Default to front camera\n    return () => {\n      // Stop the camera tracks when component unmounts\n      const videoElement = videoRef.current;\n      if (videoElement && videoElement.srcObject) {\n        const stream = videoElement.srcObject;\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, [isFrontCamera]);\n\n  // Handle QR code scan result\n  const handleScan = data => {\n    if (data && isScanningEnabled) {\n      setScannedData(data); // Store scanned data (roll number) in state\n      setError(\"\"); // Clear previous error messages\n      setSuccess(\"\"); // Clear previous success messages\n      setIsScanningEnabled(false); // Disable further scanning while processing\n\n      console.log(\"Scanned QR Code Data:\", data); // Log the scanned QR data to the console\n\n      // Instead of API call, simulate a successful scan\n      setSuccess(\"Successfully scanned! QR Code Data: \" + data);\n    }\n  };\n\n  // Handle error during scanning\n  const handleError = err => {\n    console.error(err);\n    setError(\"An error occurred while scanning. Please try again.\");\n  };\n\n  // Reset the scanner for the next scan\n  const resetScanner = () => {\n    setScannedData(null);\n    setIsScanningEnabled(true); // Enable scanning again\n  };\n  const handleBack = () => {\n    navigate(\"/admin/dashboard\"); // Navigate back to dashboard\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-4\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-2\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          width: \"100%\",\n          height: \"auto\",\n          style: {\n            borderRadius: \"8px\",\n            border: \"2px solid #ddd\",\n            maxHeight: \"400px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 500,\n        onError: handleError // Error handling callback\n        ,\n        onResult: handleScan // Result handling callback\n        ,\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          borderRadius: \"8px\",\n          border: \"2px solid #ddd\",\n          display: \"none\" // Hide QR reader interface\n        },\n        facingMode: isFrontCamera ? \"user\" : \"environment\" // Default to front camera\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mb-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this), \" \", success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-2\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), \" \", success && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetScanner,\n        className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-2\",\n        children: \"Next Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-2\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCamera // Switch camera\n        ,\n        className: \"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-2\",\n        children: \"Switch Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"g4r0ZonvX57lt3FWdod7R7IgCzI=\", false, function () {\n  return [useNavigate];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","QrReader","jsxDEV","_jsxDEV","QRScanner","_s","error","setError","success","setSuccess","scannedData","setScannedData","isScanningEnabled","setIsScanningEnabled","isFrontCamera","setIsFrontCamera","navigate","videoRef","startCamera","facingMode","constraints","video","width","ideal","height","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","catch","err","console","toggleCamera","newCamera","videoElement","tracks","getTracks","forEach","track","stop","handleScan","data","log","handleError","resetScanner","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","style","borderRadius","border","maxHeight","delay","onError","onResult","display","onClick","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { QrReader } from \"react-qr-reader\"; // Correct import for QR reader\r\n\r\nconst QRScanner = () => {\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n  const [success, setSuccess] = useState(\"\"); // Success message state\r\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\r\n  const [isScanningEnabled, setIsScanningEnabled] = useState(true); // Control scanning state\r\n  const [isFrontCamera, setIsFrontCamera] = useState(false); // Handle front/back camera\r\n  const navigate = useNavigate();\r\n  \r\n  // Use Ref to hold video element\r\n  const videoRef = useRef(null);\r\n\r\n  // Start the camera stream with constraints\r\n  const startCamera = (facingMode) => {\r\n    const constraints = {\r\n      video: {\r\n        facingMode: facingMode, // Choose between user (front) and environment (back) camera\r\n        width: { ideal: 1280 },\r\n        height: { ideal: 720 },\r\n      },\r\n    };\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then((stream) => {\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing camera: \", err);\r\n        setError(\"Unable to access camera. Please check your permissions.\");\r\n      });\r\n  };\r\n\r\n  // Switch the camera between front and back\r\n  const toggleCamera = () => {\r\n    const newCamera = isFrontCamera ? \"environment\" : \"user\"; // Toggle between front and back camera\r\n    setIsFrontCamera(!isFrontCamera); // Toggle the camera state\r\n    startCamera(newCamera); // Restart the camera with new facing mode\r\n  };\r\n\r\n  // Start camera on component mount\r\n  useEffect(() => {\r\n    startCamera(isFrontCamera ? \"user\" : \"environment\"); // Default to front camera\r\n    return () => {\r\n      // Stop the camera tracks when component unmounts\r\n      const videoElement = videoRef.current;\r\n      if (videoElement && videoElement.srcObject) {\r\n        const stream = videoElement.srcObject;\r\n        const tracks = stream.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, [isFrontCamera]);\r\n\r\n  // Handle QR code scan result\r\n  const handleScan = (data) => {\r\n    if (data && isScanningEnabled) {\r\n      setScannedData(data); // Store scanned data (roll number) in state\r\n      setError(\"\"); // Clear previous error messages\r\n      setSuccess(\"\"); // Clear previous success messages\r\n      setIsScanningEnabled(false); // Disable further scanning while processing\r\n\r\n      console.log(\"Scanned QR Code Data:\", data); // Log the scanned QR data to the console\r\n\r\n      // Instead of API call, simulate a successful scan\r\n      setSuccess(\"Successfully scanned! QR Code Data: \" + data);\r\n    }\r\n  };\r\n\r\n  // Handle error during scanning\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n    setError(\"An error occurred while scanning. Please try again.\");\r\n  };\r\n\r\n  // Reset the scanner for the next scan\r\n  const resetScanner = () => {\r\n    setScannedData(null);\r\n    setIsScanningEnabled(true); // Enable scanning again\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/admin/dashboard\"); // Navigate back to dashboard\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-4\">\r\n          QR Code Scanner\r\n        </h2>\r\n\r\n        {/* Camera Feed (Video Element) */}\r\n        <div className=\"relative mb-2\"> {/* Reduced margin-bottom */}\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              border: \"2px solid #ddd\",\r\n              maxHeight: \"400px\",\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* QR Code Scanner */}\r\n        <QrReader\r\n          delay={500}\r\n          onError={handleError} // Error handling callback\r\n          onResult={handleScan} // Result handling callback\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            borderRadius: \"8px\",\r\n            border: \"2px solid #ddd\",\r\n            display: \"none\", // Hide QR reader interface\r\n          }}\r\n          facingMode={isFrontCamera ? \"user\" : \"environment\"} // Default to front camera\r\n        />\r\n\r\n        {/* Error or Success Message */}\r\n        {error && <p className=\"text-red-500 text-center mb-2\">{error}</p>} {/* Reduced margin-bottom */}\r\n        {success && <p className=\"text-green-500 text-center mb-2\">{success}</p>} {/* Reduced margin-bottom */}\r\n\r\n        {/* Submit Button - Appears after QR Code is Scanned */}\r\n        {success && (\r\n          <button\r\n            onClick={resetScanner}\r\n            className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mb-2\"\r\n          >\r\n            Next Scan\r\n          </button>\r\n        )}\r\n\r\n        {/* Back Button */}\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"w-full py-3 bg-gray-400 text-white font-semibold rounded-lg hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-400 mb-2\"\r\n        >\r\n          Back to Dashboard\r\n        </button>\r\n\r\n        {/* Switch Camera Button */}\r\n        <button\r\n          onClick={toggleCamera} // Switch camera\r\n          className=\"w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 mb-2\"\r\n        >\r\n          Switch Camera\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}