{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ticket booking\\\\client\\\\src\\\\pages\\\\QRScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\n  const [error, setError] = useState(\"\"); // Error message state\n\n  // Handle QR code scan result\n  const handleScan = data => {\n    if (data) {\n      console.log(\"Scanned QR Code Data: \", data); // Log the QR code data to console\n      setScannedData(data); // Update the state with the scanned data\n      setError(\"\"); // Clear any previous error messages\n    }\n  };\n\n  // Handle error during scanning\n  const handleError = err => {\n    console.error(\"QR Reader Error: \", err); // Log the error to console\n    setError(\"An error occurred while scanning. Please try again.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-gray-800 mb-4\",\n        children: \"QR Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 500,\n        onError: handleError // Error handling callback\n        ,\n        onResult: handleScan // Result handling callback\n        ,\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          borderRadius: \"8px\",\n          border: \"2px solid #ddd\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mb-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), scannedData && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center mb-2\",\n        children: [\"Successfully scanned: \", scannedData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"Vky42DOv3jkJpD37OutPDMXdA40=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","QRScanner","_s","scannedData","setScannedData","error","setError","handleScan","data","console","log","handleError","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onResult","style","width","height","borderRadius","border","_c","$RefreshReg$"],"sources":["E:/Ticket booking/client/src/pages/QRScanner.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { QrReader } from \"react-qr-reader\";\r\n\r\nconst QRScanner = () => {\r\n  const [scannedData, setScannedData] = useState(null); // Store scanned QR data\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n\r\n  // Handle QR code scan result\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      console.log(\"Scanned QR Code Data: \", data); // Log the QR code data to console\r\n      setScannedData(data); // Update the state with the scanned data\r\n      setError(\"\"); // Clear any previous error messages\r\n    }\r\n  };\r\n\r\n  // Handle error during scanning\r\n  const handleError = (err) => {\r\n    console.error(\"QR Reader Error: \", err); // Log the error to console\r\n    setError(\"An error occurred while scanning. Please try again.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-6\">\r\n      <div className=\"w-full max-w-md bg-white p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-4\">\r\n          QR Code Scanner\r\n        </h2>\r\n\r\n        {/* QR Code Scanner */}\r\n        <QrReader\r\n          delay={500}\r\n          onError={handleError} // Error handling callback\r\n          onResult={handleScan} // Result handling callback\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            borderRadius: \"8px\",\r\n            border: \"2px solid #ddd\",\r\n          }}\r\n        />\r\n\r\n        {/* Error or Success Message */}\r\n        {error && <p className=\"text-red-500 text-center mb-2\">{error}</p>}\r\n        {scannedData && (\r\n          <p className=\"text-green-500 text-center mb-2\">\r\n            Successfully scanned: {scannedData}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMU,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC,CAAC,CAAC;MAC7CJ,cAAc,CAACI,IAAI,CAAC,CAAC,CAAC;MACtBF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;;EAED;EACA,MAAMK,WAAW,GAAIC,GAAG,IAAK;IAC3BH,OAAO,CAACJ,KAAK,CAAC,mBAAmB,EAAEO,GAAG,CAAC,CAAC,CAAC;IACzCN,QAAQ,CAAC,qDAAqD,CAAC;EACjE,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,sEAAsE;IAAAC,QAAA,eACnFd,OAAA;MAAKa,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChEd,OAAA;QAAIa,SAAS,EAAC,uDAAuD;QAAAC,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGLlB,OAAA,CAACF,QAAQ;QACPqB,KAAK,EAAE,GAAI;QACXC,OAAO,EAAET,WAAY,CAAC;QAAA;QACtBU,QAAQ,EAAEd,UAAW,CAAC;QAAA;QACtBe,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE;QACV;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGDb,KAAK,iBAAIL,OAAA;QAAGa,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAET;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjEf,WAAW,iBACVH,OAAA;QAAGa,SAAS,EAAC,iCAAiC;QAAAC,QAAA,GAAC,wBACvB,EAACX,WAAW;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjDID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}